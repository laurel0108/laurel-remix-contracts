{
	"id": "1bb6777edf842acf4d68a3ee4e8ad78b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.20",
	"solcLongVersion": "0.4.20+commit.3155dd80",
	"input": {
		"language": "Solidity",
		"sources": {
			"casiono.sol": {
				"content": "pragma solidity 0.4.20;\r\ncontract Casino {\r\n   address public owner;\r\n   uint256 public minimumBet;\r\n   uint256 public totalBet;\r\n   uint256 public numberOfBets;\r\n   uint256 public maxAmountOfBets = 100;\r\n   address[] public players;\r\n   struct Player {\r\n      uint256 amountBet;\r\n      uint256 numberSelected;\r\n   }\r\n   // The address of the player and => the user info   \r\n   mapping(address => Player) public playerInfo;\r\n   function() public payable {}\r\n   function Casino(uint256 _minimumBet) public {\r\n      owner = msg.sender;\r\n      if(_minimumBet != 0 ) minimumBet = _minimumBet;\r\n   }\r\n   function kill() public {\r\n      if(msg.sender == owner) selfdestruct(owner);\r\n   }\r\n   function checkPlayerExists(address player) public constant returns(bool){\r\n      for(uint256 i = 0; i < players.length; i++){\r\n         if(players[i] == player) return true;\r\n      }\r\n      return false;\r\n   }\r\n   // To bet for a number between 1 and 10 both inclusive\r\n   function bet(uint256 numberSelected) public payable {\r\n      require(!checkPlayerExists(msg.sender));\r\n      require(numberSelected >= 1 && numberSelected <= 10);\r\n      require(msg.value >= minimumBet);\r\n      playerInfo[msg.sender].amountBet = msg.value;\r\n      playerInfo[msg.sender].numberSelected = numberSelected;\r\n      numberOfBets++;\r\n      players.push(msg.sender);\r\n      totalBet += msg.value;\r\n   }\r\n   // Generates a number between 1 and 10 that will be the winner\r\n   function generateNumberWinner() public {\r\n      uint256 numberGenerated = block.number % 10 + 1; // This isn't secure\r\n      distributePrizes(numberGenerated);\r\n   }\r\n   // Sends the corresponding ether to each winner depending on the total bets\r\n   function distributePrizes(uint256 numberWinner) public {\r\n      address[100] memory winners; // We have to create a temporary in memory array with fixed size\r\n      uint256 count = 0; // This is the count for the array of winners\r\n      for(uint256 i = 0; i < players.length; i++){\r\n         address playerAddress = players[i];\r\n         if(playerInfo[playerAddress].numberSelected == numberWinner){\r\n            winners[count] = playerAddress;\r\n            count++;\r\n         }\r\n         delete playerInfo[playerAddress]; // Delete all the players\r\n      }\r\n      players.length = 0; // Delete all the players array\r\n      uint256 winnerEtherAmount = totalBet / winners.length; // How much each winner gets\r\n      for(uint256 j = 0; j < count; j++){\r\n         if(winners[j] != address(0)) // Check that the address in this fixed array is not empty\r\n         winners[j].transfer(winnerEtherAmount);\r\n      }\r\n   }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"casiono.sol": {
				"Casino": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "generateNumberWinner",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "numberOfBets",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "player",
									"type": "address"
								}
							],
							"name": "checkPlayerExists",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "kill",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"name": "playerInfo",
							"outputs": [
								{
									"name": "amountBet",
									"type": "uint256"
								},
								{
									"name": "numberSelected",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "numberWinner",
									"type": "uint256"
								}
							],
							"name": "distributePrizes",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "numberSelected",
									"type": "uint256"
								}
							],
							"name": "bet",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "minimumBet",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "maxAmountOfBets",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "players",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalBet",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_minimumBet",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"payable": true,
							"stateMutability": "payable",
							"type": "fallback"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"casiono.sol\":25:2608  contract Casino {\r... */\n  mstore(0x40, 0x60)\n    /* \"casiono.sol\":199:202  100 */\n  0x64\n    /* \"casiono.sol\":166:202  uint256 public maxAmountOfBets = 100 */\n  0x4\n  sstore\n    /* \"casiono.sol\":461:594  function Casino(uint256 _minimumBet) public {\r... */\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  mload(0x40)\n  0x20\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap2\n  swap1\n  pop\n  pop\n    /* \"casiono.sol\":522:532  msg.sender */\n  caller\n    /* \"casiono.sol\":514:519  owner */\n  0x0\n  dup1\n    /* \"casiono.sol\":514:532  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"casiono.sol\":559:560  0 */\n  0x0\n    /* \"casiono.sol\":544:555  _minimumBet */\n  dup2\n    /* \"casiono.sol\":544:560  _minimumBet != 0 */\n  eq\n  iszero\n    /* \"casiono.sol\":541:587  if(_minimumBet != 0 ) minimumBet = _minimumBet */\n  iszero\n  tag_4\n  jumpi\n    /* \"casiono.sol\":576:587  _minimumBet */\n  dup1\n    /* \"casiono.sol\":563:573  minimumBet */\n  0x1\n    /* \"casiono.sol\":563:587  minimumBet = _minimumBet */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"casiono.sol\":541:587  if(_minimumBet != 0 ) minimumBet = _minimumBet */\ntag_4:\n    /* \"casiono.sol\":461:594  function Casino(uint256 _minimumBet) public {\r... */\n  pop\n    /* \"casiono.sol\":25:2608  contract Casino {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"casiono.sol\":25:2608  contract Casino {\r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0xa50e361\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2ca8c6d3\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4081d916\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x41c0e1b5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x4b114691\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x6ca3fc3b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7365870b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xc38a8afd\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xe08a96cd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf71d96cb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfe5e1853\n      eq\n      tag_13\n      jumpi\n    tag_1:\n      stop\n        /* \"casiono.sol\":1442:1607  function generateNumberWinner() public {\r... */\n    tag_2:\n      jumpi(tag_16, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_16:\n      tag_17\n      jump(tag_18)\n    tag_17:\n      stop\n        /* \"casiono.sol\":133:160  uint256 public numberOfBets */\n    tag_3:\n      jumpi(tag_19, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_19:\n      tag_20\n      jump(tag_21)\n    tag_20:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"casiono.sol\":686:895  function checkPlayerExists(address player) public constant returns(bool){\r... */\n    tag_4:\n      jumpi(tag_22, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_22:\n      tag_23\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_24)\n    tag_23:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"casiono.sol\":599:681  function kill() public {\r... */\n    tag_5:\n      jumpi(tag_25, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_25:\n      tag_26\n      jump(tag_27)\n    tag_26:\n      stop\n        /* \"casiono.sol\":378:422  mapping(address => Player) public playerInfo */\n    tag_6:\n      jumpi(tag_28, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_28:\n      tag_29\n      0x4\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_30)\n    tag_29:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"casiono.sol\":1692:2605  function distributePrizes(uint256 numberWinner) public {\r... */\n    tag_7:\n      jumpi(tag_31, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_31:\n      tag_32\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_33)\n    tag_32:\n      stop\n        /* \"casiono.sol\":959:1370  function bet(uint256 numberSelected) public payable {\r... */\n    tag_8:\n      tag_34\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_35)\n    tag_34:\n      stop\n        /* \"casiono.sol\":47:67  address public owner */\n    tag_9:\n      jumpi(tag_36, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_36:\n      tag_37\n      jump(tag_38)\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"casiono.sol\":73:98  uint256 public minimumBet */\n    tag_10:\n      jumpi(tag_39, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_39:\n      tag_40\n      jump(tag_41)\n    tag_40:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"casiono.sol\":166:202  uint256 public maxAmountOfBets = 100 */\n    tag_11:\n      jumpi(tag_42, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_42:\n      tag_43\n      jump(tag_44)\n    tag_43:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"casiono.sol\":208:232  address[] public players */\n    tag_12:\n      jumpi(tag_45, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_45:\n      tag_46\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_47)\n    tag_46:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"casiono.sol\":104:127  uint256 public totalBet */\n    tag_13:\n      jumpi(tag_48, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_48:\n      tag_49\n      jump(tag_50)\n    tag_49:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"casiono.sol\":1442:1607  function generateNumberWinner() public {\r... */\n    tag_18:\n        /* \"casiono.sol\":1490:1513  uint256 numberGenerated */\n      0x0\n        /* \"casiono.sol\":1536:1537  1 */\n      0x1\n        /* \"casiono.sol\":1531:1533  10 */\n      0xa\n        /* \"casiono.sol\":1516:1528  block.number */\n      number\n        /* \"casiono.sol\":1516:1533  block.number % 10 */\n      dup2\n      iszero\n      iszero\n      tag_52\n      jumpi\n      invalid\n    tag_52:\n      mod\n        /* \"casiono.sol\":1516:1537  block.number % 10 + 1 */\n      add\n        /* \"casiono.sol\":1490:1537  uint256 numberGenerated = block.number % 10 + 1 */\n      swap1\n      pop\n        /* \"casiono.sol\":1567:1600  distributePrizes(numberGenerated) */\n      tag_53\n        /* \"casiono.sol\":1584:1599  numberGenerated */\n      dup2\n        /* \"casiono.sol\":1567:1583  distributePrizes */\n      tag_33\n        /* \"casiono.sol\":1567:1600  distributePrizes(numberGenerated) */\n      jump\t// in\n    tag_53:\n        /* \"casiono.sol\":1442:1607  function generateNumberWinner() public {\r... */\n      pop\n      jump\t// out\n        /* \"casiono.sol\":133:160  uint256 public numberOfBets */\n    tag_21:\n      sload(0x3)\n      dup2\n      jump\t// out\n        /* \"casiono.sol\":686:895  function checkPlayerExists(address player) public constant returns(bool){\r... */\n    tag_24:\n        /* \"casiono.sol\":753:757  bool */\n      0x0\n        /* \"casiono.sol\":771:780  uint256 i */\n      dup1\n        /* \"casiono.sol\":783:784  0 */\n      0x0\n        /* \"casiono.sol\":771:784  uint256 i = 0 */\n      swap1\n      pop\n        /* \"casiono.sol\":767:868  for(uint256 i = 0; i < players.length; i++){\r... */\n    tag_55:\n        /* \"casiono.sol\":790:797  players */\n      0x5\n        /* \"casiono.sol\":790:804  players.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"casiono.sol\":786:787  i */\n      dup2\n        /* \"casiono.sol\":786:804  i < players.length */\n      lt\n        /* \"casiono.sol\":767:868  for(uint256 i = 0; i < players.length; i++){\r... */\n      iszero\n      tag_56\n      jumpi\n        /* \"casiono.sol\":839:845  player */\n      dup3\n        /* \"casiono.sol\":825:845  players[i] == player */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"casiono.sol\":825:832  players */\n      0x5\n        /* \"casiono.sol\":833:834  i */\n      dup3\n        /* \"casiono.sol\":825:835  players[i] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_58\n      jumpi\n      invalid\n    tag_58:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"casiono.sol\":825:845  players[i] == player */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"casiono.sol\":822:858  if(players[i] == player) return true */\n      iszero\n      tag_60\n      jumpi\n        /* \"casiono.sol\":854:858  true */\n      0x1\n        /* \"casiono.sol\":847:858  return true */\n      swap2\n      pop\n      jump(tag_54)\n        /* \"casiono.sol\":822:858  if(players[i] == player) return true */\n    tag_60:\n        /* \"casiono.sol\":806:809  i++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"casiono.sol\":767:868  for(uint256 i = 0; i < players.length; i++){\r... */\n      jump(tag_55)\n    tag_56:\n        /* \"casiono.sol\":883:888  false */\n      0x0\n        /* \"casiono.sol\":876:888  return false */\n      swap2\n      pop\n        /* \"casiono.sol\":686:895  function checkPlayerExists(address player) public constant returns(bool){\r... */\n    tag_54:\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"casiono.sol\":599:681  function kill() public {\r... */\n    tag_27:\n        /* \"casiono.sol\":648:653  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"casiono.sol\":634:653  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"casiono.sol\":634:644  msg.sender */\n      caller\n        /* \"casiono.sol\":634:653  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"casiono.sol\":631:674  if(msg.sender == owner) selfdestruct(owner) */\n      iszero\n      tag_62\n      jumpi\n        /* \"casiono.sol\":668:673  owner */\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"casiono.sol\":655:674  selfdestruct(owner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      selfdestruct\n        /* \"casiono.sol\":631:674  if(msg.sender == owner) selfdestruct(owner) */\n    tag_62:\n        /* \"casiono.sol\":599:681  function kill() public {\r... */\n      jump\t// out\n        /* \"casiono.sol\":378:422  mapping(address => Player) public playerInfo */\n    tag_30:\n      mstore(0x20, 0x6)\n      dup1\n      0x0\n      mstore\n      keccak256(0x0, 0x40)\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x0\n      add\n      sload\n      swap1\n      dup1\n      0x1\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n        /* \"casiono.sol\":1692:2605  function distributePrizes(uint256 numberWinner) public {\r... */\n    tag_33:\n        /* \"casiono.sol\":1756:1783  address[100] memory winners */\n      tag_63\n      jump\t// in(tag_64)\n    tag_63:\n        /* \"casiono.sol\":1857:1870  uint256 count */\n      0x0\n        /* \"casiono.sol\":1933:1942  uint256 i */\n      dup1\n        /* \"casiono.sol\":1984:2005  address playerAddress */\n      0x0\n        /* \"casiono.sol\":2316:2341  uint256 winnerEtherAmount */\n      dup1\n        /* \"casiono.sol\":2411:2420  uint256 j */\n      0x0\n        /* \"casiono.sol\":1873:1874  0 */\n      dup1\n        /* \"casiono.sol\":1857:1874  uint256 count = 0 */\n      swap5\n      pop\n        /* \"casiono.sol\":1945:1946  0 */\n      0x0\n        /* \"casiono.sol\":1933:1946  uint256 i = 0 */\n      swap4\n      pop\n        /* \"casiono.sol\":1929:2249  for(uint256 i = 0; i < players.length; i++){\r... */\n    tag_66:\n        /* \"casiono.sol\":1952:1959  players */\n      0x5\n        /* \"casiono.sol\":1952:1966  players.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"casiono.sol\":1948:1949  i */\n      dup5\n        /* \"casiono.sol\":1948:1966  i < players.length */\n      lt\n        /* \"casiono.sol\":1929:2249  for(uint256 i = 0; i < players.length; i++){\r... */\n      iszero\n      tag_67\n      jumpi\n        /* \"casiono.sol\":2008:2015  players */\n      0x5\n        /* \"casiono.sol\":2016:2017  i */\n      dup5\n        /* \"casiono.sol\":2008:2018  players[i] */\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_69\n      jumpi\n      invalid\n    tag_69:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"casiono.sol\":1984:2018  address playerAddress = players[i] */\n      swap3\n      pop\n        /* \"casiono.sol\":2077:2089  numberWinner */\n      dup7\n        /* \"casiono.sol\":2033:2043  playerInfo */\n      0x6\n        /* \"casiono.sol\":2033:2058  playerInfo[playerAddress] */\n      0x0\n        /* \"casiono.sol\":2044:2057  playerAddress */\n      dup6\n        /* \"casiono.sol\":2033:2058  playerInfo[playerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"casiono.sol\":2033:2073  playerInfo[playerAddress].numberSelected */\n      0x1\n      add\n      sload\n        /* \"casiono.sol\":2033:2089  playerInfo[playerAddress].numberSelected == numberWinner */\n      eq\n        /* \"casiono.sol\":2030:2170  if(playerInfo[playerAddress].numberSelected == numberWinner){\r... */\n      iszero\n      tag_71\n      jumpi\n        /* \"casiono.sol\":2122:2135  playerAddress */\n      dup3\n        /* \"casiono.sol\":2105:2112  winners */\n      dup7\n        /* \"casiono.sol\":2113:2118  count */\n      dup7\n        /* \"casiono.sol\":2105:2119  winners[count] */\n      0x64\n      dup2\n      lt\n      iszero\n      iszero\n      tag_72\n      jumpi\n      invalid\n    tag_72:\n      0x20\n      mul\n      add\n        /* \"casiono.sol\":2105:2135  winners[count] = playerAddress */\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"casiono.sol\":2150:2157  count++ */\n      dup5\n      dup1\n      0x1\n      add\n      swap6\n      pop\n      pop\n        /* \"casiono.sol\":2030:2170  if(playerInfo[playerAddress].numberSelected == numberWinner){\r... */\n    tag_71:\n        /* \"casiono.sol\":2188:2198  playerInfo */\n      0x6\n        /* \"casiono.sol\":2188:2213  playerInfo[playerAddress] */\n      0x0\n        /* \"casiono.sol\":2199:2212  playerAddress */\n      dup5\n        /* \"casiono.sol\":2188:2213  playerInfo[playerAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n      0x0\n        /* \"casiono.sol\":2181:2213  delete playerInfo[playerAddress] */\n      dup1\n      dup3\n      add\n      0x0\n      swap1\n      sstore\n      0x1\n      dup3\n      add\n      0x0\n      swap1\n      sstore\n      pop\n      pop\n        /* \"casiono.sol\":1968:1971  i++ */\n      dup4\n      dup1\n      0x1\n      add\n      swap5\n      pop\n      pop\n        /* \"casiono.sol\":1929:2249  for(uint256 i = 0; i < players.length; i++){\r... */\n      jump(tag_66)\n    tag_67:\n        /* \"casiono.sol\":2274:2275  0 */\n      0x0\n        /* \"casiono.sol\":2257:2264  players */\n      0x5\n        /* \"casiono.sol\":2257:2275  players.length = 0 */\n      dup2\n      tag_73\n      swap2\n      swap1\n      jump\t// in(tag_74)\n    tag_73:\n      pop\n        /* \"casiono.sol\":2355:2369  winners.length */\n      0x64\n        /* \"casiono.sol\":2344:2352  totalBet */\n      sload(0x2)\n        /* \"casiono.sol\":2344:2369  totalBet / winners.length */\n      dup2\n      iszero\n      iszero\n      tag_75\n      jumpi\n      invalid\n    tag_75:\n      div\n        /* \"casiono.sol\":2316:2369  uint256 winnerEtherAmount = totalBet / winners.length */\n      swap2\n      pop\n        /* \"casiono.sol\":2423:2424  0 */\n      0x0\n        /* \"casiono.sol\":2411:2424  uint256 j = 0 */\n      swap1\n      pop\n        /* \"casiono.sol\":2407:2599  for(uint256 j = 0; j < count; j++){\r... */\n    tag_76:\n        /* \"casiono.sol\":2430:2435  count */\n      dup5\n        /* \"casiono.sol\":2426:2427  j */\n      dup2\n        /* \"casiono.sol\":2426:2435  j < count */\n      lt\n        /* \"casiono.sol\":2407:2599  for(uint256 j = 0; j < count; j++){\r... */\n      iszero\n      tag_77\n      jumpi\n        /* \"casiono.sol\":2478:2479  0 */\n      0x0\n        /* \"casiono.sol\":2456:2480  winners[j] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"casiono.sol\":2456:2463  winners */\n      dup7\n        /* \"casiono.sol\":2464:2465  j */\n      dup3\n        /* \"casiono.sol\":2456:2466  winners[j] */\n      0x64\n      dup2\n      lt\n      iszero\n      iszero\n      tag_79\n      jumpi\n      invalid\n    tag_79:\n      0x20\n      mul\n      add\n      mload\n        /* \"casiono.sol\":2456:2480  winners[j] != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"casiono.sol\":2453:2589  if(winners[j] != address(0)) // Check that the address in this fixed array is not empty\r... */\n      iszero\n      tag_80\n      jumpi\n        /* \"casiono.sol\":2551:2558  winners */\n      dup6\n        /* \"casiono.sol\":2559:2560  j */\n      dup2\n        /* \"casiono.sol\":2551:2561  winners[j] */\n      0x64\n      dup2\n      lt\n      iszero\n      iszero\n      tag_81\n      jumpi\n      invalid\n    tag_81:\n      0x20\n      mul\n      add\n      mload\n        /* \"casiono.sol\":2551:2570  winners[j].transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"casiono.sol\":2551:2589  winners[j].transfer(winnerEtherAmount) */\n      0x8fc\n        /* \"casiono.sol\":2571:2588  winnerEtherAmount */\n      dup4\n        /* \"casiono.sol\":2551:2589  winners[j].transfer(winnerEtherAmount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      iszero\n      tag_82\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_82:\n        /* \"casiono.sol\":2453:2589  if(winners[j] != address(0)) // Check that the address in this fixed array is not empty\r... */\n    tag_80:\n        /* \"casiono.sol\":2437:2440  j++ */\n      dup1\n      dup1\n      0x1\n      add\n      swap2\n      pop\n      pop\n        /* \"casiono.sol\":2407:2599  for(uint256 j = 0; j < count; j++){\r... */\n      jump(tag_76)\n    tag_77:\n        /* \"casiono.sol\":1692:2605  function distributePrizes(uint256 numberWinner) public {\r... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"casiono.sol\":959:1370  function bet(uint256 numberSelected) public payable {\r... */\n    tag_35:\n        /* \"casiono.sol\":1029:1058  checkPlayerExists(msg.sender) */\n      tag_84\n        /* \"casiono.sol\":1047:1057  msg.sender */\n      caller\n        /* \"casiono.sol\":1029:1046  checkPlayerExists */\n      tag_24\n        /* \"casiono.sol\":1029:1058  checkPlayerExists(msg.sender) */\n      jump\t// in\n    tag_84:\n        /* \"casiono.sol\":1028:1058  !checkPlayerExists(msg.sender) */\n      iszero\n        /* \"casiono.sol\":1020:1059  require(!checkPlayerExists(msg.sender)) */\n      iszero\n      iszero\n      tag_85\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_85:\n        /* \"casiono.sol\":1094:1095  1 */\n      0x1\n        /* \"casiono.sol\":1076:1090  numberSelected */\n      dup2\n        /* \"casiono.sol\":1076:1095  numberSelected >= 1 */\n      lt\n      iszero\n        /* \"casiono.sol\":1076:1119  numberSelected >= 1 && numberSelected <= 10 */\n      dup1\n      iszero\n      tag_86\n      jumpi\n      pop\n        /* \"casiono.sol\":1117:1119  10 */\n      0xa\n        /* \"casiono.sol\":1099:1113  numberSelected */\n      dup2\n        /* \"casiono.sol\":1099:1119  numberSelected <= 10 */\n      gt\n      iszero\n        /* \"casiono.sol\":1076:1119  numberSelected >= 1 && numberSelected <= 10 */\n    tag_86:\n        /* \"casiono.sol\":1068:1120  require(numberSelected >= 1 && numberSelected <= 10) */\n      iszero\n      iszero\n      tag_87\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_87:\n        /* \"casiono.sol\":1150:1160  minimumBet */\n      sload(0x1)\n        /* \"casiono.sol\":1137:1146  msg.value */\n      callvalue\n        /* \"casiono.sol\":1137:1160  msg.value >= minimumBet */\n      lt\n      iszero\n        /* \"casiono.sol\":1129:1161  require(msg.value >= minimumBet) */\n      iszero\n      iszero\n      tag_88\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_88:\n        /* \"casiono.sol\":1205:1214  msg.value */\n      callvalue\n        /* \"casiono.sol\":1170:1180  playerInfo */\n      0x6\n        /* \"casiono.sol\":1170:1192  playerInfo[msg.sender] */\n      0x0\n        /* \"casiono.sol\":1181:1191  msg.sender */\n      caller\n        /* \"casiono.sol\":1170:1192  playerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"casiono.sol\":1170:1202  playerInfo[msg.sender].amountBet */\n      0x0\n      add\n        /* \"casiono.sol\":1170:1214  playerInfo[msg.sender].amountBet = msg.value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"casiono.sol\":1263:1277  numberSelected */\n      dup1\n        /* \"casiono.sol\":1223:1233  playerInfo */\n      0x6\n        /* \"casiono.sol\":1223:1245  playerInfo[msg.sender] */\n      0x0\n        /* \"casiono.sol\":1234:1244  msg.sender */\n      caller\n        /* \"casiono.sol\":1223:1245  playerInfo[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"casiono.sol\":1223:1260  playerInfo[msg.sender].numberSelected */\n      0x1\n      add\n        /* \"casiono.sol\":1223:1277  playerInfo[msg.sender].numberSelected = numberSelected */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"casiono.sol\":1286:1298  numberOfBets */\n      0x3\n      0x0\n        /* \"casiono.sol\":1286:1300  numberOfBets++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      0x1\n      add\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"casiono.sol\":1309:1316  players */\n      0x5\n        /* \"casiono.sol\":1309:1333  players.push(msg.sender) */\n      dup1\n      sload\n      dup1\n      0x1\n      add\n      dup3\n      dup2\n      tag_89\n      swap2\n      swap1\n      jump\t// in(tag_90)\n    tag_89:\n      swap2\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n        /* \"casiono.sol\":1322:1332  msg.sender */\n      caller\n        /* \"casiono.sol\":1309:1333  players.push(msg.sender) */\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"casiono.sol\":1354:1363  msg.value */\n      callvalue\n        /* \"casiono.sol\":1342:1350  totalBet */\n      0x2\n      0x0\n        /* \"casiono.sol\":1342:1363  totalBet += msg.value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"casiono.sol\":959:1370  function bet(uint256 numberSelected) public payable {\r... */\n      pop\n      jump\t// out\n        /* \"casiono.sol\":47:67  address public owner */\n    tag_38:\n      0x0\n      dup1\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"casiono.sol\":73:98  uint256 public minimumBet */\n    tag_41:\n      sload(0x1)\n      dup2\n      jump\t// out\n        /* \"casiono.sol\":166:202  uint256 public maxAmountOfBets = 100 */\n    tag_44:\n      sload(0x4)\n      dup2\n      jump\t// out\n        /* \"casiono.sol\":208:232  address[] public players */\n    tag_47:\n      0x5\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_92\n      jumpi\n      invalid\n    tag_92:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      add\n      0x0\n      swap2\n      pop\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"casiono.sol\":104:127  uint256 public totalBet */\n    tag_50:\n      sload(0x2)\n      dup2\n      jump\t// out\n        /* \"casiono.sol\":25:2608  contract Casino {\r... */\n    tag_64:\n      0xc80\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      0x64\n      swap1\n    tag_94:\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x0)\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x1\n      swap1\n      sub\n      swap1\n      dup2\n      tag_94\n      jumpi\n      swap1\n      pop\n      pop\n      swap1\n      jump\t// out\n    tag_74:\n      dup2\n      sload\n      dup2\n      dup4\n      sstore\n      dup2\n      dup2\n      iszero\n      gt\n      tag_95\n      jumpi\n      dup2\n      dup4\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap2\n      dup3\n      add\n      swap2\n      add\n      tag_96\n      swap2\n      swap1\n      jump\t// in(tag_97)\n    tag_96:\n    tag_95:\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_90:\n      dup2\n      sload\n      dup2\n      dup4\n      sstore\n      dup2\n      dup2\n      iszero\n      gt\n      tag_98\n      jumpi\n      dup2\n      dup4\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap2\n      dup3\n      add\n      swap2\n      add\n      tag_99\n      swap2\n      swap1\n      jump\t// in(tag_97)\n    tag_99:\n    tag_98:\n      pop\n      pop\n      pop\n      jump\t// out\n    tag_97:\n      tag_100\n      swap2\n      swap1\n    tag_101:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_102\n      jumpi\n      0x0\n      dup2\n      0x0\n      swap1\n      sstore\n      pop\n      0x1\n      add\n      jump(tag_101)\n    tag_102:\n      pop\n      swap1\n      jump\n    tag_100:\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820921bad77f98150e1e9a21e80baa026c3a7441b36faed74570cf909f1ae674b380029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60606040526064600455341561001457600080fd5b604051602080610a2383398101604052808051906020019091905050336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008114151561008257806001819055505b50610991806100926000396000f3006060604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a50e361146100bc5780632ca8c6d3146100d15780634081d916146100fa57806341c0e1b51461014b5780634b114691146101605780636ca3fc3b146101b45780637365870b146101d75780638da5cb5b146101ef578063c38a8afd14610244578063e08a96cd1461026d578063f71d96cb14610296578063fe5e1853146102f9575b005b34156100c757600080fd5b6100cf610322565b005b34156100dc57600080fd5b6100e4610342565b6040518082815260200191505060405180910390f35b341561010557600080fd5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610348565b604051808215151515815260200191505060405180910390f35b341561015657600080fd5b61015e6103ec565b005b341561016b57600080fd5b610197600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061047d565b604051808381526020018281526020019250505060405180910390f35b34156101bf57600080fd5b6101d560048080359060200190919050506104a1565b005b6101ed60048080359060200190919050506106da565b005b34156101fa57600080fd5b610202610833565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561024f57600080fd5b610257610858565b6040518082815260200191505060405180910390f35b341561027857600080fd5b61028061085e565b6040518082815260200191505060405180910390f35b34156102a157600080fd5b6102b76004808035906020019091905050610864565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561030457600080fd5b61030c6108a3565b6040518082815260200191505060405180910390f35b60006001600a4381151561033257fe5b0601905061033f816104a1565b50565b60035481565b600080600090505b6005805490508110156103e1578273ffffffffffffffffffffffffffffffffffffffff1660058281548110151561038357fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103d457600191506103e6565b8080600101915050610350565b600091505b50919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561047b576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b60066020528060005260406000206000915090508060000154908060010154905082565b6104a96108a9565b6000806000806000809450600093505b6005805490508410156105fb576005848154811015156104d557fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925086600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561059c5782868660648110151561055c57fe5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084806001019550505b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055505083806001019450506104b9565b600060058161060a91906108e8565b50606460025481151561061957fe5b049150600090505b848110156106d157600073ffffffffffffffffffffffffffffffffffffffff16868260648110151561064f57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff161415156106c457858160648110151561067f57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015156106c357600080fd5b5b8080600101915050610621565b50505050505050565b6106e333610348565b1515156106ef57600080fd5b600181101580156107015750600a8111155b151561070c57600080fd5b600154341015151561071d57600080fd5b34600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600360008154809291906001019190505550600580548060010182816107d19190610914565b9160005260206000209001600033909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550503460026000828254019250508190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60045481565b60058181548110151561087357fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b610c80604051908101604052806064905b600073ffffffffffffffffffffffffffffffffffffffff168152602001906001900390816108ba5790505090565b81548183558181151161090f5781836000526020600020918201910161090e9190610940565b5b505050565b81548183558181151161093b5781836000526020600020918201910161093a9190610940565b5b505050565b61096291905b8082111561095e576000816000905550600101610946565b5090565b905600a165627a7a72305820921bad77f98150e1e9a21e80baa026c3a7441b36faed74570cf909f1ae674b380029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x4 SSTORE CALLVALUE ISZERO PUSH2 0x14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0xA23 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP2 EQ ISZERO ISZERO PUSH2 0x82 JUMPI DUP1 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMPDEST POP PUSH2 0x991 DUP1 PUSH2 0x92 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBA JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xA50E361 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x2CA8C6D3 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4081D916 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x4B114691 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x6CA3FC3B EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x7365870B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xC38A8AFD EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xE08A96CD EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xFE5E1853 EQ PUSH2 0x2F9 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCF PUSH2 0x322 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4 PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH2 0x3EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x4A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x6DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x202 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x257 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x280 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30C PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xA NUMBER DUP2 ISZERO ISZERO PUSH2 0x332 JUMPI INVALID JUMPDEST MOD ADD SWAP1 POP PUSH2 0x33F DUP2 PUSH2 0x4A1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x3E1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x383 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x3E6 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x4A9 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP5 POP PUSH1 0x0 SWAP4 POP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP5 LT ISZERO PUSH2 0x5FB JUMPI PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4D5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP7 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x59C JUMPI DUP3 DUP7 DUP7 PUSH1 0x64 DUP2 LT ISZERO ISZERO PUSH2 0x55C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 DUP1 PUSH1 0x1 ADD SWAP6 POP POP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP POP PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST POP PUSH1 0x64 PUSH1 0x2 SLOAD DUP2 ISZERO ISZERO PUSH2 0x619 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP3 PUSH1 0x64 DUP2 LT ISZERO ISZERO PUSH2 0x64F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x6C4 JUMPI DUP6 DUP2 PUSH1 0x64 DUP2 LT ISZERO ISZERO PUSH2 0x67F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x621 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6E3 CALLER PUSH2 0x348 JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x701 JUMPI POP PUSH1 0xA DUP2 GT ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x1 ADD DUP3 DUP2 PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x914 JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 CALLER SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x873 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC80 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 SWAP1 JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x8BA JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0x90F JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x940 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0x93B JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x940 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x962 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x946 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP3 0x1b 0xad PUSH24 0xF98150E1E9A21E80BAA026C3A7441B36FAED74570CF909F1 0xae PUSH8 0x4B38002900000000 ",
							"sourceMap": "25:2583:0:-;;;199:3;166:36;;461:133;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;522:10;514:5;;:18;;;;;;;;;;;;;;;;;;559:1;544:11;:16;;541:46;;;576:11;563:10;:24;;;;541:46;461:133;25:2583;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6060604052600436106100ba576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630a50e361146100bc5780632ca8c6d3146100d15780634081d916146100fa57806341c0e1b51461014b5780634b114691146101605780636ca3fc3b146101b45780637365870b146101d75780638da5cb5b146101ef578063c38a8afd14610244578063e08a96cd1461026d578063f71d96cb14610296578063fe5e1853146102f9575b005b34156100c757600080fd5b6100cf610322565b005b34156100dc57600080fd5b6100e4610342565b6040518082815260200191505060405180910390f35b341561010557600080fd5b610131600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610348565b604051808215151515815260200191505060405180910390f35b341561015657600080fd5b61015e6103ec565b005b341561016b57600080fd5b610197600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061047d565b604051808381526020018281526020019250505060405180910390f35b34156101bf57600080fd5b6101d560048080359060200190919050506104a1565b005b6101ed60048080359060200190919050506106da565b005b34156101fa57600080fd5b610202610833565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561024f57600080fd5b610257610858565b6040518082815260200191505060405180910390f35b341561027857600080fd5b61028061085e565b6040518082815260200191505060405180910390f35b34156102a157600080fd5b6102b76004808035906020019091905050610864565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561030457600080fd5b61030c6108a3565b6040518082815260200191505060405180910390f35b60006001600a4381151561033257fe5b0601905061033f816104a1565b50565b60035481565b600080600090505b6005805490508110156103e1578273ffffffffffffffffffffffffffffffffffffffff1660058281548110151561038357fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156103d457600191506103e6565b8080600101915050610350565b600091505b50919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561047b576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16ff5b565b60066020528060005260406000206000915090508060000154908060010154905082565b6104a96108a9565b6000806000806000809450600093505b6005805490508410156105fb576005848154811015156104d557fe5b906000526020600020900160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16925086600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154141561059c5782868660648110151561055c57fe5b602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505084806001019550505b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000808201600090556001820160009055505083806001019450506104b9565b600060058161060a91906108e8565b50606460025481151561061957fe5b049150600090505b848110156106d157600073ffffffffffffffffffffffffffffffffffffffff16868260648110151561064f57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff161415156106c457858160648110151561067f57fe5b602002015173ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f1935050505015156106c357600080fd5b5b8080600101915050610621565b50505050505050565b6106e333610348565b1515156106ef57600080fd5b600181101580156107015750600a8111155b151561070c57600080fd5b600154341015151561071d57600080fd5b34600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010181905550600360008154809291906001019190505550600580548060010182816107d19190610914565b9160005260206000209001600033909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550503460026000828254019250508190555050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60015481565b60045481565b60058181548110151561087357fe5b90600052602060002090016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60025481565b610c80604051908101604052806064905b600073ffffffffffffffffffffffffffffffffffffffff168152602001906001900390816108ba5790505090565b81548183558181151161090f5781836000526020600020918201910161090e9190610940565b5b505050565b81548183558181151161093b5781836000526020600020918201910161093a9190610940565b5b505050565b61096291905b8082111561095e576000816000905550600101610946565b5090565b905600a165627a7a72305820921bad77f98150e1e9a21e80baa026c3a7441b36faed74570cf909f1ae674b380029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xBA JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xA50E361 EQ PUSH2 0xBC JUMPI DUP1 PUSH4 0x2CA8C6D3 EQ PUSH2 0xD1 JUMPI DUP1 PUSH4 0x4081D916 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x41C0E1B5 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x4B114691 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x6CA3FC3B EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x7365870B EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1EF JUMPI DUP1 PUSH4 0xC38A8AFD EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0xE08A96CD EQ PUSH2 0x26D JUMPI DUP1 PUSH4 0xF71D96CB EQ PUSH2 0x296 JUMPI DUP1 PUSH4 0xFE5E1853 EQ PUSH2 0x2F9 JUMPI JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xCF PUSH2 0x322 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xDC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4 PUSH2 0x342 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x348 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x156 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15E PUSH2 0x3EC JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x47D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x4A1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1ED PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x6DA JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x202 PUSH2 0x833 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x257 PUSH2 0x858 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x278 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x280 PUSH2 0x85E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B7 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x864 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x30C PUSH2 0x8A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xA NUMBER DUP2 ISZERO ISZERO PUSH2 0x332 JUMPI INVALID JUMPDEST MOD ADD SWAP1 POP PUSH2 0x33F DUP2 PUSH2 0x4A1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x3E1 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 DUP3 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x383 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x3D4 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0x3E6 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x47B JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SELFDESTRUCT JUMPDEST JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP JUMPDEST PUSH2 0x4A9 PUSH2 0x8A9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 SWAP5 POP PUSH1 0x0 SWAP4 POP JUMPDEST PUSH1 0x5 DUP1 SLOAD SWAP1 POP DUP5 LT ISZERO PUSH2 0x5FB JUMPI PUSH1 0x5 DUP5 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x4D5 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP DUP7 PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD EQ ISZERO PUSH2 0x59C JUMPI DUP3 DUP7 DUP7 PUSH1 0x64 DUP2 LT ISZERO ISZERO PUSH2 0x55C JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP5 DUP1 PUSH1 0x1 ADD SWAP6 POP POP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP POP DUP4 DUP1 PUSH1 0x1 ADD SWAP5 POP POP PUSH2 0x4B9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 DUP2 PUSH2 0x60A SWAP2 SWAP1 PUSH2 0x8E8 JUMP JUMPDEST POP PUSH1 0x64 PUSH1 0x2 SLOAD DUP2 ISZERO ISZERO PUSH2 0x619 JUMPI INVALID JUMPDEST DIV SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x6D1 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 DUP3 PUSH1 0x64 DUP2 LT ISZERO ISZERO PUSH2 0x64F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x6C4 JUMPI DUP6 DUP2 PUSH1 0x64 DUP2 LT ISZERO ISZERO PUSH2 0x67F JUMPI INVALID JUMPDEST PUSH1 0x20 MUL ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO ISZERO PUSH2 0x6C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x621 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x6E3 CALLER PUSH2 0x348 JUMP JUMPDEST ISZERO ISZERO ISZERO PUSH2 0x6EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 LT ISZERO DUP1 ISZERO PUSH2 0x701 JUMPI POP PUSH1 0xA DUP2 GT ISZERO JUMPDEST ISZERO ISZERO PUSH2 0x70C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD CALLVALUE LT ISZERO ISZERO ISZERO PUSH2 0x71D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH1 0x1 ADD SWAP2 SWAP1 POP SSTORE POP PUSH1 0x5 DUP1 SLOAD DUP1 PUSH1 0x1 ADD DUP3 DUP2 PUSH2 0x7D1 SWAP2 SWAP1 PUSH2 0x914 JUMP JUMPDEST SWAP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 CALLER SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP CALLVALUE PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x873 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xC80 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x64 SWAP1 JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x8BA JUMPI SWAP1 POP POP SWAP1 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0x90F JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x940 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 ISZERO GT PUSH2 0x93B JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x93A SWAP2 SWAP1 PUSH2 0x940 JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x962 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x95E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x946 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 SWAP3 0x1b 0xad PUSH24 0xF98150E1E9A21E80BAA026C3A7441B36FAED74570CF909F1 0xae PUSH8 0x4B38002900000000 ",
							"sourceMap": "25:2583:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1442:165;;;;;;;;;;;;;;133:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;686:209;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;599:82;;;;;;;;;;;;;;378:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1692:913;;;;;;;;;;;;;;;;;;;;;;;;;;959:411;;;;;;;;;;;;;;;;;;47:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;73:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;166:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;208:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;104:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1442:165;1490:23;1536:1;1531:2;1516:12;:17;;;;;;;;:21;1490:47;;1567:33;1584:15;1567:16;:33::i;:::-;1442:165;:::o;133:27::-;;;;:::o;686:209::-;753:4;771:9;783:1;771:13;;767:101;790:7;:14;;;;786:1;:18;767:101;;;839:6;825:20;;:7;833:1;825:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;:20;;;822:36;;;854:4;847:11;;;;822:36;806:3;;;;;;;767:101;;;883:5;876:12;;686:209;;;;;:::o;599:82::-;648:5;;;;;;;;;;;634:19;;:10;:19;;;631:43;;;668:5;;;;;;;;;;;655:19;;;631:43;599:82::o;378:44::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1692:913::-;1756:27;;:::i;:::-;1857:13;1933:9;1984:21;2316:25;2411:9;1873:1;1857:17;;1945:1;1933:13;;1929:320;1952:7;:14;;;;1948:1;:18;1929:320;;;2008:7;2016:1;2008:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1984:34;;2077:12;2033:10;:25;2044:13;2033:25;;;;;;;;;;;;;;;:40;;;:56;2030:140;;;2122:13;2105:7;2113:5;2105:14;;;;;;;;;;;;:30;;;;;;;;;;;2150:7;;;;;;;2030:140;2188:10;:25;2199:13;2188:25;;;;;;;;;;;;;;;;2181:32;;;;;;;;;;;;;;1968:3;;;;;;;1929:320;;;2274:1;2257:7;:18;;;;;:::i;:::-;;2355:14;2344:8;;:25;;;;;;;;2316:53;;2423:1;2411:13;;2407:192;2430:5;2426:1;:9;2407:192;;;2478:1;2456:24;;:7;2464:1;2456:10;;;;;;;;;;;;;:24;;;;2453:136;;;2551:7;2559:1;2551:10;;;;;;;;;;;;;:19;;:38;2571:17;2551:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:136;2437:3;;;;;;;2407:192;;;1692:913;;;;;;;:::o;959:411::-;1029:29;1047:10;1029:17;:29::i;:::-;1028:30;1020:39;;;;;;;;1094:1;1076:14;:19;;:43;;;;;1117:2;1099:14;:20;;1076:43;1068:52;;;;;;;;1150:10;;1137:9;:23;;1129:32;;;;;;;;1205:9;1170:10;:22;1181:10;1170:22;;;;;;;;;;;;;;;:32;;:44;;;;1263:14;1223:10;:22;1234:10;1223:22;;;;;;;;;;;;;;;:37;;:54;;;;1286:12;;:14;;;;;;;;;;;;;1309:7;:24;;;;;;;;;;;:::i;:::-;;;;;;;;;;1322:10;1309:24;;;;;;;;;;;;;;;;;;;;;;;1354:9;1342:8;;:21;;;;;;;;;;;959:411;:::o;47:20::-;;;;;;;;;;;;;:::o;73:25::-;;;;:::o;166:36::-;;;;:::o;208:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;104:23::-;;;;:::o;25:2583::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "489800",
								"executionCost": "60903",
								"totalCost": "550703"
							},
							"external": {
								"": "327",
								"bet(uint256)": "infinite",
								"checkPlayerExists(address)": "infinite",
								"distributePrizes(uint256)": "infinite",
								"generateNumberWinner()": "infinite",
								"kill()": "30702",
								"maxAmountOfBets()": "584",
								"minimumBet()": "562",
								"numberOfBets()": "408",
								"owner()": "588",
								"playerInfo(address)": "836",
								"players(uint256)": "979",
								"totalBet()": "628"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 2608,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 25,
									"end": 2608,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 2608,
									"name": "MSTORE"
								},
								{
									"begin": 199,
									"end": 202,
									"name": "PUSH",
									"value": "64"
								},
								{
									"begin": 166,
									"end": 202,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 166,
									"end": 202,
									"name": "SSTORE"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "CALLVALUE"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "ISZERO"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "JUMPI"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "DUP1"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "REVERT"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "JUMPDEST"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "MLOAD"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "DUP1"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "PUSHSIZE"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "DUP4"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "CODECOPY"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "DUP2"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "ADD"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "MSTORE"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "DUP1"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "DUP1"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "MLOAD"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "ADD"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "SWAP2"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "SWAP1"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "POP"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "POP"
								},
								{
									"begin": 522,
									"end": 532,
									"name": "CALLER"
								},
								{
									"begin": 514,
									"end": 519,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 514,
									"end": 519,
									"name": "DUP1"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "EXP"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "DUP2"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "SLOAD"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "DUP2"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "MUL"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "NOT"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "AND"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "SWAP1"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "DUP4"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "AND"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "MUL"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "OR"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "SWAP1"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "SSTORE"
								},
								{
									"begin": 514,
									"end": 532,
									"name": "POP"
								},
								{
									"begin": 559,
									"end": 560,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 544,
									"end": 555,
									"name": "DUP2"
								},
								{
									"begin": 544,
									"end": 560,
									"name": "EQ"
								},
								{
									"begin": 544,
									"end": 560,
									"name": "ISZERO"
								},
								{
									"begin": 541,
									"end": 587,
									"name": "ISZERO"
								},
								{
									"begin": 541,
									"end": 587,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 541,
									"end": 587,
									"name": "JUMPI"
								},
								{
									"begin": 576,
									"end": 587,
									"name": "DUP1"
								},
								{
									"begin": 563,
									"end": 573,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 563,
									"end": 587,
									"name": "DUP2"
								},
								{
									"begin": 563,
									"end": 587,
									"name": "SWAP1"
								},
								{
									"begin": 563,
									"end": 587,
									"name": "SSTORE"
								},
								{
									"begin": 563,
									"end": 587,
									"name": "POP"
								},
								{
									"begin": 541,
									"end": 587,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 541,
									"end": 587,
									"name": "JUMPDEST"
								},
								{
									"begin": 461,
									"end": 594,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2608,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2608,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2608,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2608,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2608,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 2608,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2608,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820921bad77f98150e1e9a21e80baa026c3a7441b36faed74570cf909f1ae674b380029",
									".code": [
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DIV"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "AND"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "A50E361"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "2CA8C6D3"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "4081D916"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "41C0E1B5"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "4B114691"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "6CA3FC3B"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "7365870B"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "C38A8AFD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "E08A96CD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "F71D96CB"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "FE5E1853"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "STOP"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "JUMPDEST"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "CALLVALUE"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "ISZERO"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "JUMPI"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "DUP1"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "REVERT"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "JUMPDEST"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "JUMP"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "JUMPDEST"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "STOP"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "JUMPDEST"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "CALLVALUE"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "ISZERO"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "JUMPI"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "REVERT"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "JUMPDEST"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "JUMP"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "JUMPDEST"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "MLOAD"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "DUP3"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "DUP2"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "MSTORE"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "ADD"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "POP"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "MLOAD"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP2"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SUB"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SWAP1"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "RETURN"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "JUMPDEST"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "CALLVALUE"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "ISZERO"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "JUMPI"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "DUP1"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "REVERT"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "JUMPDEST"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "DUP1"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "DUP1"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "AND"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "ADD"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "SWAP2"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "JUMP"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "JUMPDEST"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "MLOAD"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "DUP1"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "DUP3"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "ISZERO"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "ISZERO"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "ISZERO"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "ISZERO"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "DUP2"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "MSTORE"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "ADD"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "SWAP2"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "MLOAD"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "DUP1"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "SWAP2"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "SUB"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "RETURN"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "JUMPDEST"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "CALLVALUE"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "ISZERO"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "JUMPI"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "DUP1"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "REVERT"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "JUMPDEST"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "JUMP"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "JUMPDEST"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "STOP"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "CALLVALUE"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "ISZERO"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "JUMPI"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "REVERT"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "AND"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "ADD"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SWAP2"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "JUMP"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "MLOAD"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP4"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP2"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "MSTORE"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "ADD"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP3"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP2"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "MSTORE"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "ADD"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SWAP3"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "MLOAD"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SWAP2"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SUB"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "RETURN"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "JUMPDEST"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "CALLVALUE"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "ISZERO"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "JUMPI"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "DUP1"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "REVERT"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "JUMPDEST"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "DUP1"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "DUP1"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "ADD"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "SWAP2"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "SWAP1"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "JUMP"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "JUMPDEST"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "STOP"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "JUMPDEST"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "DUP1"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "DUP1"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "ADD"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "SWAP2"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "SWAP1"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "POP"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "POP"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "JUMP"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "JUMPDEST"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "STOP"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMPDEST"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "CALLVALUE"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "ISZERO"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMPI"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "REVERT"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMPDEST"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMP"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMPDEST"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "MLOAD"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP3"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "AND"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "AND"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP2"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "MSTORE"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "ADD"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP2"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "POP"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "POP"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "MLOAD"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP2"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SUB"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "RETURN"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "CALLVALUE"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "ISZERO"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "JUMPI"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "REVERT"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "JUMP"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "MLOAD"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "DUP3"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "MSTORE"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "ADD"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "SWAP2"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "POP"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "MLOAD"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "DUP1"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "SWAP2"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "SUB"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "SWAP1"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "RETURN"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "JUMPDEST"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "CALLVALUE"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "ISZERO"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "JUMPI"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "DUP1"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "REVERT"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "JUMPDEST"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "JUMP"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "JUMPDEST"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "MLOAD"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "DUP1"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "DUP3"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "DUP2"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "MSTORE"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "ADD"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "SWAP2"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "POP"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "POP"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "MLOAD"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "DUP1"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "SWAP2"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "SUB"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "SWAP1"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "RETURN"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "JUMPDEST"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "CALLVALUE"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "ISZERO"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "JUMPI"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DUP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "REVERT"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "JUMPDEST"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DUP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DUP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "ADD"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP2"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "POP"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "POP"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "JUMP"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "JUMPDEST"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "MLOAD"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DUP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DUP3"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "AND"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "AND"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DUP2"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "MSTORE"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "ADD"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP2"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "POP"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "POP"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "MLOAD"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DUP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP2"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SUB"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "RETURN"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "JUMPDEST"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "CALLVALUE"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "ISZERO"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "JUMPI"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "DUP1"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "REVERT"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "JUMPDEST"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "JUMP"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "JUMPDEST"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "MLOAD"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "DUP1"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "DUP3"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "DUP2"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "MSTORE"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "ADD"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "SWAP2"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "POP"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "POP"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "MLOAD"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "DUP1"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "SWAP2"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "SUB"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "SWAP1"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "RETURN"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "JUMPDEST"
										},
										{
											"begin": 1490,
											"end": 1513,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1531,
											"end": 1533,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1516,
											"end": 1528,
											"name": "NUMBER"
										},
										{
											"begin": 1516,
											"end": 1533,
											"name": "DUP2"
										},
										{
											"begin": 1516,
											"end": 1533,
											"name": "ISZERO"
										},
										{
											"begin": 1516,
											"end": 1533,
											"name": "ISZERO"
										},
										{
											"begin": 1516,
											"end": 1533,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1516,
											"end": 1533,
											"name": "JUMPI"
										},
										{
											"begin": 1516,
											"end": 1533,
											"name": "INVALID"
										},
										{
											"begin": 1516,
											"end": 1533,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1516,
											"end": 1533,
											"name": "JUMPDEST"
										},
										{
											"begin": 1516,
											"end": 1533,
											"name": "MOD"
										},
										{
											"begin": 1516,
											"end": 1537,
											"name": "ADD"
										},
										{
											"begin": 1490,
											"end": 1537,
											"name": "SWAP1"
										},
										{
											"begin": 1490,
											"end": 1537,
											"name": "POP"
										},
										{
											"begin": 1567,
											"end": 1600,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1584,
											"end": 1599,
											"name": "DUP2"
										},
										{
											"begin": 1567,
											"end": 1583,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1567,
											"end": 1600,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1567,
											"end": 1600,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1567,
											"end": 1600,
											"name": "JUMPDEST"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "POP"
										},
										{
											"begin": 1442,
											"end": 1607,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "JUMPDEST"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "SLOAD"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "DUP2"
										},
										{
											"begin": 133,
											"end": 160,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "JUMPDEST"
										},
										{
											"begin": 753,
											"end": 757,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 771,
											"end": 780,
											"name": "DUP1"
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 771,
											"end": 784,
											"name": "SWAP1"
										},
										{
											"begin": 771,
											"end": 784,
											"name": "POP"
										},
										{
											"begin": 767,
											"end": 868,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 767,
											"end": 868,
											"name": "JUMPDEST"
										},
										{
											"begin": 790,
											"end": 797,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 790,
											"end": 804,
											"name": "DUP1"
										},
										{
											"begin": 790,
											"end": 804,
											"name": "SLOAD"
										},
										{
											"begin": 790,
											"end": 804,
											"name": "SWAP1"
										},
										{
											"begin": 790,
											"end": 804,
											"name": "POP"
										},
										{
											"begin": 786,
											"end": 787,
											"name": "DUP2"
										},
										{
											"begin": 786,
											"end": 804,
											"name": "LT"
										},
										{
											"begin": 767,
											"end": 868,
											"name": "ISZERO"
										},
										{
											"begin": 767,
											"end": 868,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 767,
											"end": 868,
											"name": "JUMPI"
										},
										{
											"begin": 839,
											"end": 845,
											"name": "DUP3"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "AND"
										},
										{
											"begin": 825,
											"end": 832,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 833,
											"end": 834,
											"name": "DUP3"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "DUP2"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "SLOAD"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "DUP2"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "LT"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "ISZERO"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "ISZERO"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "JUMPI"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "INVALID"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "JUMPDEST"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "SWAP1"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "MSTORE"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "KECCAK256"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "SWAP1"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "ADD"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "SWAP1"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "SLOAD"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "SWAP1"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "EXP"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "SWAP1"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "DIV"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 825,
											"end": 835,
											"name": "AND"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "AND"
										},
										{
											"begin": 825,
											"end": 845,
											"name": "EQ"
										},
										{
											"begin": 822,
											"end": 858,
											"name": "ISZERO"
										},
										{
											"begin": 822,
											"end": 858,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 822,
											"end": 858,
											"name": "JUMPI"
										},
										{
											"begin": 854,
											"end": 858,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 847,
											"end": 858,
											"name": "SWAP2"
										},
										{
											"begin": 847,
											"end": 858,
											"name": "POP"
										},
										{
											"begin": 847,
											"end": 858,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 847,
											"end": 858,
											"name": "JUMP"
										},
										{
											"begin": 822,
											"end": 858,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 822,
											"end": 858,
											"name": "JUMPDEST"
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP1"
										},
										{
											"begin": 806,
											"end": 809,
											"name": "DUP1"
										},
										{
											"begin": 806,
											"end": 809,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 806,
											"end": 809,
											"name": "ADD"
										},
										{
											"begin": 806,
											"end": 809,
											"name": "SWAP2"
										},
										{
											"begin": 806,
											"end": 809,
											"name": "POP"
										},
										{
											"begin": 806,
											"end": 809,
											"name": "POP"
										},
										{
											"begin": 767,
											"end": 868,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 767,
											"end": 868,
											"name": "JUMP"
										},
										{
											"begin": 767,
											"end": 868,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 767,
											"end": 868,
											"name": "JUMPDEST"
										},
										{
											"begin": 883,
											"end": 888,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 876,
											"end": 888,
											"name": "SWAP2"
										},
										{
											"begin": 876,
											"end": 888,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "JUMPDEST"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "SWAP2"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "SWAP1"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "POP"
										},
										{
											"begin": 686,
											"end": 895,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "JUMPDEST"
										},
										{
											"begin": 648,
											"end": 653,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 648,
											"end": 653,
											"name": "DUP1"
										},
										{
											"begin": 648,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 648,
											"end": 653,
											"name": "SLOAD"
										},
										{
											"begin": 648,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 648,
											"end": 653,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 648,
											"end": 653,
											"name": "EXP"
										},
										{
											"begin": 648,
											"end": 653,
											"name": "SWAP1"
										},
										{
											"begin": 648,
											"end": 653,
											"name": "DIV"
										},
										{
											"begin": 648,
											"end": 653,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 648,
											"end": 653,
											"name": "AND"
										},
										{
											"begin": 634,
											"end": 653,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 634,
											"end": 653,
											"name": "AND"
										},
										{
											"begin": 634,
											"end": 644,
											"name": "CALLER"
										},
										{
											"begin": 634,
											"end": 653,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 634,
											"end": 653,
											"name": "AND"
										},
										{
											"begin": 634,
											"end": 653,
											"name": "EQ"
										},
										{
											"begin": 631,
											"end": 674,
											"name": "ISZERO"
										},
										{
											"begin": 631,
											"end": 674,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 631,
											"end": 674,
											"name": "JUMPI"
										},
										{
											"begin": 668,
											"end": 673,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 668,
											"end": 673,
											"name": "DUP1"
										},
										{
											"begin": 668,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 668,
											"end": 673,
											"name": "SLOAD"
										},
										{
											"begin": 668,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 668,
											"end": 673,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 668,
											"end": 673,
											"name": "EXP"
										},
										{
											"begin": 668,
											"end": 673,
											"name": "SWAP1"
										},
										{
											"begin": 668,
											"end": 673,
											"name": "DIV"
										},
										{
											"begin": 668,
											"end": 673,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 668,
											"end": 673,
											"name": "AND"
										},
										{
											"begin": 655,
											"end": 674,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 655,
											"end": 674,
											"name": "AND"
										},
										{
											"begin": 655,
											"end": 674,
											"name": "SELFDESTRUCT"
										},
										{
											"begin": 631,
											"end": 674,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 631,
											"end": 674,
											"name": "JUMPDEST"
										},
										{
											"begin": 599,
											"end": 681,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "JUMPDEST"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "MSTORE"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "MSTORE"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "KECCAK256"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SWAP2"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "ADD"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SLOAD"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "ADD"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SLOAD"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "SWAP1"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "POP"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "DUP3"
										},
										{
											"begin": 378,
											"end": 422,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "JUMPDEST"
										},
										{
											"begin": 1756,
											"end": 1783,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 1756,
											"end": 1783,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 1756,
											"end": 1783,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1756,
											"end": 1783,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 1756,
											"end": 1783,
											"name": "JUMPDEST"
										},
										{
											"begin": 1857,
											"end": 1870,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1942,
											"name": "DUP1"
										},
										{
											"begin": 1984,
											"end": 2005,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2341,
											"name": "DUP1"
										},
										{
											"begin": 2411,
											"end": 2420,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1873,
											"end": 1874,
											"name": "DUP1"
										},
										{
											"begin": 1857,
											"end": 1874,
											"name": "SWAP5"
										},
										{
											"begin": 1857,
											"end": 1874,
											"name": "POP"
										},
										{
											"begin": 1945,
											"end": 1946,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1933,
											"end": 1946,
											"name": "SWAP4"
										},
										{
											"begin": 1933,
											"end": 1946,
											"name": "POP"
										},
										{
											"begin": 1929,
											"end": 2249,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 1929,
											"end": 2249,
											"name": "JUMPDEST"
										},
										{
											"begin": 1952,
											"end": 1959,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1952,
											"end": 1966,
											"name": "DUP1"
										},
										{
											"begin": 1952,
											"end": 1966,
											"name": "SLOAD"
										},
										{
											"begin": 1952,
											"end": 1966,
											"name": "SWAP1"
										},
										{
											"begin": 1952,
											"end": 1966,
											"name": "POP"
										},
										{
											"begin": 1948,
											"end": 1949,
											"name": "DUP5"
										},
										{
											"begin": 1948,
											"end": 1966,
											"name": "LT"
										},
										{
											"begin": 1929,
											"end": 2249,
											"name": "ISZERO"
										},
										{
											"begin": 1929,
											"end": 2249,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 1929,
											"end": 2249,
											"name": "JUMPI"
										},
										{
											"begin": 2008,
											"end": 2015,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2016,
											"end": 2017,
											"name": "DUP5"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "DUP2"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "SLOAD"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "DUP2"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "LT"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "ISZERO"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "ISZERO"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "JUMPI"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "INVALID"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "JUMPDEST"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "SWAP1"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "MSTORE"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "KECCAK256"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "SWAP1"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "ADD"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "SWAP1"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "SLOAD"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "SWAP1"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "EXP"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "SWAP1"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "DIV"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "AND"
										},
										{
											"begin": 1984,
											"end": 2018,
											"name": "SWAP3"
										},
										{
											"begin": 1984,
											"end": 2018,
											"name": "POP"
										},
										{
											"begin": 2077,
											"end": 2089,
											"name": "DUP7"
										},
										{
											"begin": 2033,
											"end": 2043,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2057,
											"name": "DUP6"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "AND"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "AND"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "DUP2"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "MSTORE"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "ADD"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "SWAP1"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "DUP2"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "MSTORE"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "ADD"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2058,
											"name": "KECCAK256"
										},
										{
											"begin": 2033,
											"end": 2073,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2033,
											"end": 2073,
											"name": "ADD"
										},
										{
											"begin": 2033,
											"end": 2073,
											"name": "SLOAD"
										},
										{
											"begin": 2033,
											"end": 2089,
											"name": "EQ"
										},
										{
											"begin": 2030,
											"end": 2170,
											"name": "ISZERO"
										},
										{
											"begin": 2030,
											"end": 2170,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2030,
											"end": 2170,
											"name": "JUMPI"
										},
										{
											"begin": 2122,
											"end": 2135,
											"name": "DUP3"
										},
										{
											"begin": 2105,
											"end": 2112,
											"name": "DUP7"
										},
										{
											"begin": 2113,
											"end": 2118,
											"name": "DUP7"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "DUP2"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "LT"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "ISZERO"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "ISZERO"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "JUMPI"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "INVALID"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "JUMPDEST"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "MUL"
										},
										{
											"begin": 2105,
											"end": 2119,
											"name": "ADD"
										},
										{
											"begin": 2105,
											"end": 2135,
											"name": "SWAP1"
										},
										{
											"begin": 2105,
											"end": 2135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2135,
											"name": "AND"
										},
										{
											"begin": 2105,
											"end": 2135,
											"name": "SWAP1"
										},
										{
											"begin": 2105,
											"end": 2135,
											"name": "DUP2"
										},
										{
											"begin": 2105,
											"end": 2135,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2135,
											"name": "AND"
										},
										{
											"begin": 2105,
											"end": 2135,
											"name": "DUP2"
										},
										{
											"begin": 2105,
											"end": 2135,
											"name": "MSTORE"
										},
										{
											"begin": 2105,
											"end": 2135,
											"name": "POP"
										},
										{
											"begin": 2105,
											"end": 2135,
											"name": "POP"
										},
										{
											"begin": 2150,
											"end": 2157,
											"name": "DUP5"
										},
										{
											"begin": 2150,
											"end": 2157,
											"name": "DUP1"
										},
										{
											"begin": 2150,
											"end": 2157,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2150,
											"end": 2157,
											"name": "ADD"
										},
										{
											"begin": 2150,
											"end": 2157,
											"name": "SWAP6"
										},
										{
											"begin": 2150,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2150,
											"end": 2157,
											"name": "POP"
										},
										{
											"begin": 2030,
											"end": 2170,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2030,
											"end": 2170,
											"name": "JUMPDEST"
										},
										{
											"begin": 2188,
											"end": 2198,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2212,
											"name": "DUP5"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "AND"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "AND"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "DUP2"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "MSTORE"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "ADD"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "SWAP1"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "DUP2"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "MSTORE"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "ADD"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "KECCAK256"
										},
										{
											"begin": 2188,
											"end": 2213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "DUP1"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "DUP3"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "ADD"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "SWAP1"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "SSTORE"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "DUP3"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "ADD"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "SWAP1"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "SSTORE"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "POP"
										},
										{
											"begin": 2181,
											"end": 2213,
											"name": "POP"
										},
										{
											"begin": 1968,
											"end": 1971,
											"name": "DUP4"
										},
										{
											"begin": 1968,
											"end": 1971,
											"name": "DUP1"
										},
										{
											"begin": 1968,
											"end": 1971,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1968,
											"end": 1971,
											"name": "ADD"
										},
										{
											"begin": 1968,
											"end": 1971,
											"name": "SWAP5"
										},
										{
											"begin": 1968,
											"end": 1971,
											"name": "POP"
										},
										{
											"begin": 1968,
											"end": 1971,
											"name": "POP"
										},
										{
											"begin": 1929,
											"end": 2249,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 1929,
											"end": 2249,
											"name": "JUMP"
										},
										{
											"begin": 1929,
											"end": 2249,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 1929,
											"end": 2249,
											"name": "JUMPDEST"
										},
										{
											"begin": 2274,
											"end": 2275,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2257,
											"end": 2264,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "DUP2"
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "SWAP2"
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "SWAP1"
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "JUMPDEST"
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "POP"
										},
										{
											"begin": 2355,
											"end": 2369,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2344,
											"end": 2352,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2344,
											"end": 2352,
											"name": "SLOAD"
										},
										{
											"begin": 2344,
											"end": 2369,
											"name": "DUP2"
										},
										{
											"begin": 2344,
											"end": 2369,
											"name": "ISZERO"
										},
										{
											"begin": 2344,
											"end": 2369,
											"name": "ISZERO"
										},
										{
											"begin": 2344,
											"end": 2369,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 2344,
											"end": 2369,
											"name": "JUMPI"
										},
										{
											"begin": 2344,
											"end": 2369,
											"name": "INVALID"
										},
										{
											"begin": 2344,
											"end": 2369,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 2344,
											"end": 2369,
											"name": "JUMPDEST"
										},
										{
											"begin": 2344,
											"end": 2369,
											"name": "DIV"
										},
										{
											"begin": 2316,
											"end": 2369,
											"name": "SWAP2"
										},
										{
											"begin": 2316,
											"end": 2369,
											"name": "POP"
										},
										{
											"begin": 2423,
											"end": 2424,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2424,
											"name": "SWAP1"
										},
										{
											"begin": 2411,
											"end": 2424,
											"name": "POP"
										},
										{
											"begin": 2407,
											"end": 2599,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 2407,
											"end": 2599,
											"name": "JUMPDEST"
										},
										{
											"begin": 2430,
											"end": 2435,
											"name": "DUP5"
										},
										{
											"begin": 2426,
											"end": 2427,
											"name": "DUP2"
										},
										{
											"begin": 2426,
											"end": 2435,
											"name": "LT"
										},
										{
											"begin": 2407,
											"end": 2599,
											"name": "ISZERO"
										},
										{
											"begin": 2407,
											"end": 2599,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 2407,
											"end": 2599,
											"name": "JUMPI"
										},
										{
											"begin": 2478,
											"end": 2479,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2456,
											"end": 2480,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2456,
											"end": 2480,
											"name": "AND"
										},
										{
											"begin": 2456,
											"end": 2463,
											"name": "DUP7"
										},
										{
											"begin": 2464,
											"end": 2465,
											"name": "DUP3"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "DUP2"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "LT"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "ISZERO"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "ISZERO"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "JUMPI"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "INVALID"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "JUMPDEST"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "MUL"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "ADD"
										},
										{
											"begin": 2456,
											"end": 2466,
											"name": "MLOAD"
										},
										{
											"begin": 2456,
											"end": 2480,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2456,
											"end": 2480,
											"name": "AND"
										},
										{
											"begin": 2456,
											"end": 2480,
											"name": "EQ"
										},
										{
											"begin": 2456,
											"end": 2480,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2589,
											"name": "ISZERO"
										},
										{
											"begin": 2453,
											"end": 2589,
											"name": "PUSH [tag]",
											"value": "80"
										},
										{
											"begin": 2453,
											"end": 2589,
											"name": "JUMPI"
										},
										{
											"begin": 2551,
											"end": 2558,
											"name": "DUP6"
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "DUP2"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "DUP2"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "LT"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "ISZERO"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "ISZERO"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "JUMPI"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "INVALID"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "JUMPDEST"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "MUL"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "ADD"
										},
										{
											"begin": 2551,
											"end": 2561,
											"name": "MLOAD"
										},
										{
											"begin": 2551,
											"end": 2570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2551,
											"end": 2570,
											"name": "AND"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 2571,
											"end": 2588,
											"name": "DUP4"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "SWAP1"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "DUP2"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "ISZERO"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "MUL"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "SWAP1"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "MLOAD"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "MLOAD"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "DUP1"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "DUP4"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "SUB"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "DUP2"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "DUP6"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "DUP9"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "DUP9"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "CALL"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "SWAP4"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "POP"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "POP"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "POP"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "POP"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "ISZERO"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "ISZERO"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "JUMPI"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "DUP1"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "REVERT"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2551,
											"end": 2589,
											"name": "JUMPDEST"
										},
										{
											"begin": 2453,
											"end": 2589,
											"name": "tag",
											"value": "80"
										},
										{
											"begin": 2453,
											"end": 2589,
											"name": "JUMPDEST"
										},
										{
											"begin": 2437,
											"end": 2440,
											"name": "DUP1"
										},
										{
											"begin": 2437,
											"end": 2440,
											"name": "DUP1"
										},
										{
											"begin": 2437,
											"end": 2440,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2437,
											"end": 2440,
											"name": "ADD"
										},
										{
											"begin": 2437,
											"end": 2440,
											"name": "SWAP2"
										},
										{
											"begin": 2437,
											"end": 2440,
											"name": "POP"
										},
										{
											"begin": 2437,
											"end": 2440,
											"name": "POP"
										},
										{
											"begin": 2407,
											"end": 2599,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 2407,
											"end": 2599,
											"name": "JUMP"
										},
										{
											"begin": 2407,
											"end": 2599,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 2407,
											"end": 2599,
											"name": "JUMPDEST"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "POP"
										},
										{
											"begin": 1692,
											"end": 2605,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "JUMPDEST"
										},
										{
											"begin": 1029,
											"end": 1058,
											"name": "PUSH [tag]",
											"value": "84"
										},
										{
											"begin": 1047,
											"end": 1057,
											"name": "CALLER"
										},
										{
											"begin": 1029,
											"end": 1046,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1029,
											"end": 1058,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1029,
											"end": 1058,
											"name": "tag",
											"value": "84"
										},
										{
											"begin": 1029,
											"end": 1058,
											"name": "JUMPDEST"
										},
										{
											"begin": 1028,
											"end": 1058,
											"name": "ISZERO"
										},
										{
											"begin": 1020,
											"end": 1059,
											"name": "ISZERO"
										},
										{
											"begin": 1020,
											"end": 1059,
											"name": "ISZERO"
										},
										{
											"begin": 1020,
											"end": 1059,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1020,
											"end": 1059,
											"name": "JUMPI"
										},
										{
											"begin": 1020,
											"end": 1059,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1020,
											"end": 1059,
											"name": "DUP1"
										},
										{
											"begin": 1020,
											"end": 1059,
											"name": "REVERT"
										},
										{
											"begin": 1020,
											"end": 1059,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 1020,
											"end": 1059,
											"name": "JUMPDEST"
										},
										{
											"begin": 1094,
											"end": 1095,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1076,
											"end": 1090,
											"name": "DUP2"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "LT"
										},
										{
											"begin": 1076,
											"end": 1095,
											"name": "ISZERO"
										},
										{
											"begin": 1076,
											"end": 1119,
											"name": "DUP1"
										},
										{
											"begin": 1076,
											"end": 1119,
											"name": "ISZERO"
										},
										{
											"begin": 1076,
											"end": 1119,
											"name": "PUSH [tag]",
											"value": "86"
										},
										{
											"begin": 1076,
											"end": 1119,
											"name": "JUMPI"
										},
										{
											"begin": 1076,
											"end": 1119,
											"name": "POP"
										},
										{
											"begin": 1117,
											"end": 1119,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1099,
											"end": 1113,
											"name": "DUP2"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "GT"
										},
										{
											"begin": 1099,
											"end": 1119,
											"name": "ISZERO"
										},
										{
											"begin": 1076,
											"end": 1119,
											"name": "tag",
											"value": "86"
										},
										{
											"begin": 1076,
											"end": 1119,
											"name": "JUMPDEST"
										},
										{
											"begin": 1068,
											"end": 1120,
											"name": "ISZERO"
										},
										{
											"begin": 1068,
											"end": 1120,
											"name": "ISZERO"
										},
										{
											"begin": 1068,
											"end": 1120,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 1068,
											"end": 1120,
											"name": "JUMPI"
										},
										{
											"begin": 1068,
											"end": 1120,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1120,
											"name": "DUP1"
										},
										{
											"begin": 1068,
											"end": 1120,
											"name": "REVERT"
										},
										{
											"begin": 1068,
											"end": 1120,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 1068,
											"end": 1120,
											"name": "JUMPDEST"
										},
										{
											"begin": 1150,
											"end": 1160,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1150,
											"end": 1160,
											"name": "SLOAD"
										},
										{
											"begin": 1137,
											"end": 1146,
											"name": "CALLVALUE"
										},
										{
											"begin": 1137,
											"end": 1160,
											"name": "LT"
										},
										{
											"begin": 1137,
											"end": 1160,
											"name": "ISZERO"
										},
										{
											"begin": 1129,
											"end": 1161,
											"name": "ISZERO"
										},
										{
											"begin": 1129,
											"end": 1161,
											"name": "ISZERO"
										},
										{
											"begin": 1129,
											"end": 1161,
											"name": "PUSH [tag]",
											"value": "88"
										},
										{
											"begin": 1129,
											"end": 1161,
											"name": "JUMPI"
										},
										{
											"begin": 1129,
											"end": 1161,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1129,
											"end": 1161,
											"name": "DUP1"
										},
										{
											"begin": 1129,
											"end": 1161,
											"name": "REVERT"
										},
										{
											"begin": 1129,
											"end": 1161,
											"name": "tag",
											"value": "88"
										},
										{
											"begin": 1129,
											"end": 1161,
											"name": "JUMPDEST"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "CALLVALUE"
										},
										{
											"begin": 1170,
											"end": 1180,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1191,
											"name": "CALLER"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "AND"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "AND"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "DUP2"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "MSTORE"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "ADD"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "SWAP1"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "DUP2"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "MSTORE"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "ADD"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1192,
											"name": "KECCAK256"
										},
										{
											"begin": 1170,
											"end": 1202,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1202,
											"name": "ADD"
										},
										{
											"begin": 1170,
											"end": 1214,
											"name": "DUP2"
										},
										{
											"begin": 1170,
											"end": 1214,
											"name": "SWAP1"
										},
										{
											"begin": 1170,
											"end": 1214,
											"name": "SSTORE"
										},
										{
											"begin": 1170,
											"end": 1214,
											"name": "POP"
										},
										{
											"begin": 1263,
											"end": 1277,
											"name": "DUP1"
										},
										{
											"begin": 1223,
											"end": 1233,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1244,
											"name": "CALLER"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "AND"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "MSTORE"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1245,
											"name": "KECCAK256"
										},
										{
											"begin": 1223,
											"end": 1260,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1223,
											"end": 1260,
											"name": "ADD"
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "DUP2"
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SWAP1"
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "SSTORE"
										},
										{
											"begin": 1223,
											"end": 1277,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1298,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1286,
											"end": 1298,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "DUP2"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "SLOAD"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "DUP1"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "SWAP3"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "SWAP2"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "ADD"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "SWAP2"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "SWAP1"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "POP"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "SSTORE"
										},
										{
											"begin": 1286,
											"end": 1300,
											"name": "POP"
										},
										{
											"begin": 1309,
											"end": 1316,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "DUP1"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SLOAD"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "DUP1"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "ADD"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "DUP3"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "DUP2"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SWAP2"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SWAP1"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "JUMPDEST"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SWAP2"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "MSTORE"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "KECCAK256"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SWAP1"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "ADD"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1322,
											"end": 1332,
											"name": "CALLER"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SWAP1"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SWAP2"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SWAP1"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SWAP2"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "EXP"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "DUP2"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SLOAD"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "DUP2"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "MUL"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "NOT"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "AND"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SWAP1"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "DUP4"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "AND"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "MUL"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "OR"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SWAP1"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "SSTORE"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "POP"
										},
										{
											"begin": 1309,
											"end": 1333,
											"name": "POP"
										},
										{
											"begin": 1354,
											"end": 1363,
											"name": "CALLVALUE"
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1342,
											"end": 1350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "DUP3"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "DUP3"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "SLOAD"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "ADD"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "SWAP3"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "POP"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "POP"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "DUP2"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "SWAP1"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "SSTORE"
										},
										{
											"begin": 1342,
											"end": 1363,
											"name": "POP"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "POP"
										},
										{
											"begin": 959,
											"end": 1370,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMPDEST"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SLOAD"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "EXP"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "SWAP1"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DIV"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "AND"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "DUP2"
										},
										{
											"begin": 47,
											"end": 67,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "JUMPDEST"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "SLOAD"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "DUP2"
										},
										{
											"begin": 73,
											"end": 98,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "JUMPDEST"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "SLOAD"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "DUP2"
										},
										{
											"begin": 166,
											"end": 202,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "JUMPDEST"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DUP2"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DUP2"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SLOAD"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DUP2"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "LT"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "ISZERO"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "ISZERO"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "JUMPI"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "INVALID"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "JUMPDEST"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "MSTORE"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "KECCAK256"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "ADD"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP2"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "POP"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SLOAD"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "EXP"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "SWAP1"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DIV"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "AND"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "DUP2"
										},
										{
											"begin": 208,
											"end": 232,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "JUMPDEST"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "SLOAD"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "DUP2"
										},
										{
											"begin": 104,
											"end": 127,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "C80"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "MLOAD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "ADD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "AND"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "ADD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SUB"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SLOAD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP4"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SSTORE"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "ISZERO"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "GT"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP4"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "KECCAK256"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "ADD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "ADD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SLOAD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP4"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SSTORE"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "ISZERO"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "GT"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP4"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "KECCAK256"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "ADD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "ADD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "101"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP3"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "GT"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "ISZERO"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "102"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "DUP2"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SSTORE"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "ADD"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "PUSH [tag]",
											"value": "101"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "102"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMP"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "SWAP1"
										},
										{
											"begin": 25,
											"end": 2608,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"bet(uint256)": "7365870b",
							"checkPlayerExists(address)": "4081d916",
							"distributePrizes(uint256)": "6ca3fc3b",
							"generateNumberWinner()": "0a50e361",
							"kill()": "41c0e1b5",
							"maxAmountOfBets()": "e08a96cd",
							"minimumBet()": "c38a8afd",
							"numberOfBets()": "2ca8c6d3",
							"owner()": "8da5cb5b",
							"playerInfo(address)": "4b114691",
							"players(uint256)": "f71d96cb",
							"totalBet()": "fe5e1853"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.20+commit.3155dd80\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"generateNumberWinner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberOfBets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"player\",\"type\":\"address\"}],\"name\":\"checkPlayerExists\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"playerInfo\",\"outputs\":[{\"name\":\"amountBet\",\"type\":\"uint256\"},{\"name\":\"numberSelected\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"numberWinner\",\"type\":\"uint256\"}],\"name\":\"distributePrizes\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"numberSelected\",\"type\":\"uint256\"}],\"name\":\"bet\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAmountOfBets\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"players\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalBet\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_minimumBet\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"casiono.sol\":\"Casino\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"casiono.sol\":{\"keccak256\":\"0x6010cef79947522077a09d66b4619cea09a2fab57bb713506bb3d4f72c8d7ff3\",\"urls\":[\"bzzr://388424e45330da90870039c34996f4b072c6fdda112b77ccecee0f1922056dc0\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"casiono.sol": {
				"ast": {
					"absolutePath": "casiono.sol",
					"exportedSymbols": {
						"Casino": [
							269
						]
					},
					"id": 270,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.4",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "Casino",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 269,
									"src": "47:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "47:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "minimumBet",
									"nodeType": "VariableDeclaration",
									"scope": 269,
									"src": "73:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "73:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "totalBet",
									"nodeType": "VariableDeclaration",
									"scope": 269,
									"src": "104:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "104:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"name": "numberOfBets",
									"nodeType": "VariableDeclaration",
									"scope": 269,
									"src": "133:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 8,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "133:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 12,
									"name": "maxAmountOfBets",
									"nodeType": "VariableDeclaration",
									"scope": 269,
									"src": "166:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "166:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "313030",
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "199:3:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100_by_1",
											"typeString": "int_const 100"
										},
										"value": "100"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 15,
									"name": "players",
									"nodeType": "VariableDeclaration",
									"scope": 269,
									"src": "208:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[] storage ref"
									},
									"typeName": {
										"baseType": {
											"id": 13,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "208:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 14,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "208:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[] storage pointer"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "Casino.Player",
									"id": 20,
									"members": [
										{
											"constant": false,
											"id": 17,
											"name": "amountBet",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "261:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 16,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "261:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 19,
											"name": "numberSelected",
											"nodeType": "VariableDeclaration",
											"scope": 20,
											"src": "287:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "287:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Player",
									"nodeType": "StructDefinition",
									"scope": 269,
									"src": "238:78:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"name": "playerInfo",
									"nodeType": "VariableDeclaration",
									"scope": 269,
									"src": "378:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$20_storage_$",
										"typeString": "mapping(address => struct Casino.Player storage ref)"
									},
									"typeName": {
										"id": 23,
										"keyType": {
											"id": 21,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "386:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "378:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$20_storage_$",
											"typeString": "mapping(address => struct Casino.Player storage ref)"
										},
										"valueType": {
											"contractScope": null,
											"id": 22,
											"name": "Player",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 20,
											"src": "397:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Player_$20_storage_ptr",
												"typeString": "struct Casino.Player storage pointer"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "454:2:0",
										"statements": []
									},
									"id": 28,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "436:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "454:0:0"
									},
									"scope": 269,
									"src": "428:28:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 46,
										"nodeType": "Block",
										"src": "505:89:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 36,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 33,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "514:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 34,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "522:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "522:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "514:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 37,
												"nodeType": "ExpressionStatement",
												"src": "514:18:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 38,
														"name": "_minimumBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "544:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 39,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "559:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "544:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 45,
												"nodeType": "IfStatement",
												"src": "541:46:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"id": 43,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"argumentTypes": null,
															"id": 41,
															"name": "minimumBet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "563:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"argumentTypes": null,
															"id": 42,
															"name": "_minimumBet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "576:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "563:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 44,
													"nodeType": "ExpressionStatement",
													"src": "563:24:0"
												}
											}
										]
									},
									"id": 47,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Casino",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "_minimumBet",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "477:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 29,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "476:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "505:0:0"
									},
									"scope": 269,
									"src": "461:133:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "622:59:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 50,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "634:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "634:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"id": 52,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "648:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "634:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 58,
												"nodeType": "IfStatement",
												"src": "631:43:0",
												"trueBody": {
													"expression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 55,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "668:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 54,
															"name": "selfdestruct",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 287,
															"src": "655:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
																"typeString": "function (address)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "655:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 57,
													"nodeType": "ExpressionStatement",
													"src": "655:19:0"
												}
											}
										]
									},
									"id": 60,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "kill",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "622:0:0"
									},
									"scope": 269,
									"src": "599:82:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "758:137:0",
										"statements": [
											{
												"body": {
													"id": 86,
													"nodeType": "Block",
													"src": "810:58:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 78,
																		"name": "players",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 15,
																		"src": "825:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 80,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 79,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 68,
																		"src": "833:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "825:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 81,
																	"name": "player",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 62,
																	"src": "839:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "825:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 85,
															"nodeType": "IfStatement",
															"src": "822:36:0",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"hexValue": "74727565",
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "854:4:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"functionReturnParameters": 66,
																"id": 84,
																"nodeType": "Return",
																"src": "847:11:0"
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 71,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "786:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 72,
															"name": "players",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "790:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "790:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "786:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 87,
												"initializationExpression": {
													"assignments": [
														68
													],
													"declarations": [
														{
															"constant": false,
															"id": 68,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 91,
															"src": "771:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 67,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "771:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 70,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "783:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "771:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "806:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 75,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "806:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 77,
													"nodeType": "ExpressionStatement",
													"src": "806:3:0"
												},
												"nodeType": "ForStatement",
												"src": "767:101:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "66616c7365",
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "883:5:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "false"
												},
												"functionReturnParameters": 66,
												"id": 89,
												"nodeType": "Return",
												"src": "876:12:0"
											}
										]
									},
									"id": 91,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "checkPlayerExists",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"name": "player",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "713:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "713:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "712:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "753:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 64,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "753:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "752:6:0"
									},
									"scope": 269,
									"src": "686:209:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1011:359:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 101,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1028:30:0",
															"subExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 98,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 281,
																			"src": "1047:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "1047:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 97,
																	"name": "checkPlayerExists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1029:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 100,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1029:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1020:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1020:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "1020:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 105,
																	"name": "numberSelected",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1076:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1094:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1076:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 110,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 108,
																	"name": "numberSelected",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "1099:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1117:2:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1099:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1076:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 104,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1068:52:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 113,
												"nodeType": "ExpressionStatement",
												"src": "1068:52:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 115,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "1137:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1137:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 117,
																"name": "minimumBet",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1150:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1137:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 114,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "1129:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1129:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "1129:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 121,
																"name": "playerInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "1170:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$20_storage_$",
																	"typeString": "mapping(address => struct Casino.Player storage ref)"
																}
															},
															"id": 124,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 122,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "1181:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1181:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1170:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$20_storage",
																"typeString": "struct Casino.Player storage ref"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "amountBet",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 17,
														"src": "1170:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 126,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1205:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 127,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1205:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1170:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1170:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 130,
																"name": "playerInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "1223:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$20_storage_$",
																	"typeString": "mapping(address => struct Casino.Player storage ref)"
																}
															},
															"id": 133,
															"indexExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 131,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 281,
																	"src": "1234:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 132,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1234:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1223:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Player_$20_storage",
																"typeString": "struct Casino.Player storage ref"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "numberSelected",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 19,
														"src": "1223:37:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 135,
														"name": "numberSelected",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "1263:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1223:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "1223:54:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "1286:14:0",
													"subExpression": {
														"argumentTypes": null,
														"id": 138,
														"name": "numberOfBets",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 9,
														"src": "1286:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 140,
												"nodeType": "ExpressionStatement",
												"src": "1286:14:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 144,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 281,
																"src": "1322:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1322:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 141,
															"name": "players",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1309:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1309:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1309:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 147,
												"nodeType": "ExpressionStatement",
												"src": "1309:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 148,
														"name": "totalBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1342:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 149,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 281,
															"src": "1354:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1354:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1342:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1342:21:0"
											}
										]
									},
									"id": 154,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "bet",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"name": "numberSelected",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "972:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 92,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "971:24:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1011:0:0"
									},
									"scope": 269,
									"src": "959:411:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1481:126:0",
										"statements": [
											{
												"assignments": [
													158
												],
												"declarations": [
													{
														"constant": false,
														"id": 158,
														"name": "numberGenerated",
														"nodeType": "VariableDeclaration",
														"scope": 171,
														"src": "1490:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 157,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1490:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 165,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 159,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "1516:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1516:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 161,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1531:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"src": "1516:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1536:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1516:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1490:47:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 167,
															"name": "numberGenerated",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "1584:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 166,
														"name": "distributePrizes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 268,
														"src": "1567:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1567:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "1567:33:0"
											}
										]
									},
									"id": 171,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "generateNumberWinner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1471:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1481:0:0"
									},
									"scope": 269,
									"src": "1442:165:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "1747:858:0",
										"statements": [
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"name": "winners",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "1756:27:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$100_memory_ptr",
															"typeString": "address[100] memory"
														},
														"typeName": {
															"baseType": {
																"id": 178,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1756:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 179,
															"length": {
																"argumentTypes": null,
																"hexValue": "313030",
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1764:3:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																},
																"value": "100"
															},
															"nodeType": "ArrayTypeName",
															"src": "1756:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$100_storage_ptr",
																"typeString": "address[100] storage pointer"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1756:27:0"
											},
											{
												"assignments": [
													183
												],
												"declarations": [
													{
														"constant": false,
														"id": 183,
														"name": "count",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "1857:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1857:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 185,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1873:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1857:17:0"
											},
											{
												"body": {
													"id": 225,
													"nodeType": "Block",
													"src": "1972:277:0",
													"statements": [
														{
															"assignments": [
																198
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 198,
																	"name": "playerAddress",
																	"nodeType": "VariableDeclaration",
																	"scope": 268,
																	"src": "1984:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 197,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1984:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 202,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 199,
																	"name": "players",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "2008:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage",
																		"typeString": "address[] storage ref"
																	}
																},
																"id": 201,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 200,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 187,
																	"src": "2016:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2008:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1984:34:0"
														},
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 203,
																			"name": "playerInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 24,
																			"src": "2033:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$20_storage_$",
																				"typeString": "mapping(address => struct Casino.Player storage ref)"
																			}
																		},
																		"id": 205,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 204,
																			"name": "playerAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 198,
																			"src": "2044:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2033:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Player_$20_storage",
																			"typeString": "struct Casino.Player storage ref"
																		}
																	},
																	"id": 206,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "numberSelected",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 19,
																	"src": "2033:40:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 207,
																	"name": "numberWinner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 173,
																	"src": "2077:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2033:56:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 219,
															"nodeType": "IfStatement",
															"src": "2030:140:0",
															"trueBody": {
																"id": 218,
																"nodeType": "Block",
																"src": "2090:80:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 209,
																					"name": "winners",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 180,
																					"src": "2105:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$100_memory_ptr",
																						"typeString": "address[100] memory"
																					}
																				},
																				"id": 211,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 210,
																					"name": "count",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 183,
																					"src": "2113:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2105:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 212,
																				"name": "playerAddress",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 198,
																				"src": "2122:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "2105:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 214,
																		"nodeType": "ExpressionStatement",
																		"src": "2105:30:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "++",
																			"prefix": false,
																			"src": "2150:7:0",
																			"subExpression": {
																				"argumentTypes": null,
																				"id": 215,
																				"name": "count",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 183,
																				"src": "2150:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 217,
																		"nodeType": "ExpressionStatement",
																		"src": "2150:7:0"
																	}
																]
															}
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "2181:32:0",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 220,
																		"name": "playerInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 24,
																		"src": "2188:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$20_storage_$",
																			"typeString": "mapping(address => struct Casino.Player storage ref)"
																		}
																	},
																	"id": 222,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 221,
																		"name": "playerAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "2199:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2188:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Player_$20_storage",
																		"typeString": "struct Casino.Player storage ref"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 224,
															"nodeType": "ExpressionStatement",
															"src": "2181:32:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 190,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 187,
														"src": "1948:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 191,
															"name": "players",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1952:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 192,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1952:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1948:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"initializationExpression": {
													"assignments": [
														187
													],
													"declarations": [
														{
															"constant": false,
															"id": 187,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 268,
															"src": "1933:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 186,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1933:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 189,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1945:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1933:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 195,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1968:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 194,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 187,
															"src": "1968:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 196,
													"nodeType": "ExpressionStatement",
													"src": "1968:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1929:320:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 227,
															"name": "players",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "2257:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2257:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 230,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2274:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2257:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "2257:18:0"
											},
											{
												"assignments": [
													234
												],
												"declarations": [
													{
														"constant": false,
														"id": 234,
														"name": "winnerEtherAmount",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "2316:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 233,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2316:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 239,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 235,
														"name": "totalBet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2344:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 236,
															"name": "winners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "2355:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$100_memory_ptr",
																"typeString": "address[100] memory"
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2355:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2344:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2316:53:0"
											},
											{
												"body": {
													"id": 265,
													"nodeType": "Block",
													"src": "2441:158:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 250,
																		"name": "winners",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 180,
																		"src": "2456:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$100_memory_ptr",
																			"typeString": "address[100] memory"
																		}
																	},
																	"id": 252,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 251,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "2464:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2456:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2478:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2470:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2470:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2456:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": null,
															"id": 264,
															"nodeType": "IfStatement",
															"src": "2453:136:0",
															"trueBody": {
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 261,
																			"name": "winnerEtherAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 234,
																			"src": "2571:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 257,
																				"name": "winners",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 180,
																				"src": "2551:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$100_memory_ptr",
																					"typeString": "address[100] memory"
																				}
																			},
																			"id": 259,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 258,
																				"name": "j",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 241,
																				"src": "2559:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2551:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "2551:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																			"typeString": "function (uint256)"
																		}
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2551:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 263,
																"nodeType": "ExpressionStatement",
																"src": "2551:38:0"
															}
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 244,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "2426:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"id": 245,
														"name": "count",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 183,
														"src": "2430:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2426:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 266,
												"initializationExpression": {
													"assignments": [
														241
													],
													"declarations": [
														{
															"constant": false,
															"id": 241,
															"name": "j",
															"nodeType": "VariableDeclaration",
															"scope": 268,
															"src": "2411:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 240,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2411:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 243,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2423:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2411:13:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2437:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 247,
															"name": "j",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "2437:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 249,
													"nodeType": "ExpressionStatement",
													"src": "2437:3:0"
												},
												"nodeType": "ForStatement",
												"src": "2407:192:0"
											}
										]
									},
									"id": 268,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "distributePrizes",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 173,
												"name": "numberWinner",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "1718:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1717:22:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1747:0:0"
									},
									"scope": 269,
									"src": "1692:913:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 270,
							"src": "25:2583:0"
						}
					],
					"src": "0:2608:0"
				},
				"id": 0
			}
		}
	}
}